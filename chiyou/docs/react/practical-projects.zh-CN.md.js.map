{"version":3,"sources":["webpack:///./docs/react/practical-projects.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,uJAAuJ,+HAA+H,uLAAuL,uGAAuG,oKAAoK,yLAAyL,4UAA4U,0FAA0F,2cAA2c,sJAAsJ,iMAAiM,kYAAkY,+FAA+F,6FAA6F,0IAA0I,sLAAsL,kDAAkD,0FAA0F,kIAAkI,0FAA0F,iGAAiG,kDAAkD,yFAAyF,iDAAiD,yHAAyH,4CAA4C,0CAA0C,kJAAkJ;AACpiI,OAAO;AACP;AACA;AACA,iBAAiB,4BAA4B,aAAa,0BAA0B,qBAAqB,MAAM,4BAA4B,uDAAuD,QAAQ,4DAA4D,uEAAuE,0BAA0B,2EAA2E,SAAS,QAAQ,OAAO,8BAA8B,SAAS,UAAU,QAAQ,IAAI,IAAI,+BAA+B;AAC1iB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oJAAoJ,maAAma,qLAAqL,gGAAgG,qFAAqF,8bAA8b,gDAAgD,wFAAwF,sFAAsF,0CAA0C;AACvmD,OAAO;AACP;AACA;AACA,yBAAyB,uDAAuD,qBAAqB,cAAc,GAAG,oDAAoD,OAAO,MAAM,KAAK;AAC5L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,mDAAmD,8HAA8H,6MAA6M,oLAAoL,uGAAuG,oKAAoK,qOAAqO,wIAAwI,4SAA4S,oFAAoF,8CAA8C,0IAA0I,4FAA4F,wIAAwI,kIAAkI,qGAAqG,sDAAsD,0FAA0F,kDAAkD,+HAA+H,yKAAyK,4CAA4C,0CAA0C,wQAAwQ,oDAAoD,8MAA8M,kGAAkG,0NAA0N;AAC1pH,OAAO;AACP;AACA;AACA,iBAAiB,UAAU,YAAY,sDAAsD,uBAAuB,qBAAqB,MAAM,+BAA+B,gBAAgB,2DAA2D,EAAE,KAAK,uFAAuF,aAAa,WAAW,SAAS,qBAAqB,IAAI,6BAA6B,WAAW,OAAO,gBAAgB,aAAa;AAC7d;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8LAA8L,+FAA+F,qLAAqL,uOAAuO,sRAAsR,gDAAgD,iJAAiJ,+IAA+I,iQAAiQ,qFAAqF,kQAAkQ,oIAAoI,wFAAwF,sFAAsF,0CAA0C;AACntE,OAAO;AACP;AACA;AACA,6BAA6B,aAAa,oBAAoB,6BAA6B,mCAAmC,OAAO,sBAAsB,oBAAoB,qBAAqB,GAAG,sBAAsB,SAAS,MAAM,KAAK;AACjaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbfile":"docs/react/practical-projects.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"在真实项目开发中，你可能会需要 Redux 或者 MobX 这样的数据流方案，Ant Design React 作为一个 UI 库，可以和任何 React 生态圈内的数据流方案以及应用框架搭配使用。我们基于 Redux 推出了自己的最佳实践 dva，以及可插拔的企业级应用框架 umi，推荐你在项目中使用。\"\n    ],\n    [\n      \"p\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://dvajs.com/\"\n        },\n        \"dva\"\n      ],\n      \" 是一个基于 Redux 的 轻量级数据流方案，概念来自 elm，支持 side effects、热替换、动态加载、react-native、SSR 等，已在生产环境广泛应用。\"\n    ],\n    [\n      \"p\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://umijs.org/\"\n        },\n        \"umi\"\n      ],\n      \" 则是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh/guide/router.html\"\n        },\n        \"类 next.js 的约定式路由\"\n      ],\n      \"，以及各种进阶的路由功能，并以此进行功能扩展，比如\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh/plugin/umi-plugin-react.html#dynamicimport\"\n        },\n        \"支持路由级的按需加载\"\n      ],\n      \"。然后配以完善的\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh/plugin/\"\n        },\n        \"插件体系\"\n      ],\n      \"，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求，同时提供 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh/guide/umi-ui.html\"\n        },\n        \"Umi UI\"\n      ],\n      \" 通过可视化辅助编程（VAP）提高开发体验和研发效率。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"你可能也会对 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://pro.ant.design/\"\n          },\n          \"Ant Design Pro\"\n        ],\n        \" 感兴趣，这是一个基于 umi、dva 和 ant design 的开箱即用的中台前端/设计解决方案。\"\n      ]\n    ],\n    [\n      \"p\",\n      \"本文会引导你使用 Umi UI、dva 和 antd 从 0 开始创建一个简单应用。\"\n    ],\n    [\n      \"h2\",\n      \"安装 Umi UI\"\n    ],\n    [\n      \"p\",\n      \"推荐使用 yarn 安装 Umi UI，执行以下命令。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"如果你使用 npm，可执行 \",\n        [\n          \"code\",\n          \"npm install umi -g\"\n        ],\n        \"，效果一致。\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn global add umi\\n$ umi -v\\n2.10.4\"\n      },\n      [\n        \"code\",\n        \"$ yarn global add umi\\n$ umi -v\\n2.10.4\"\n      ]\n    ],\n    [\n      \"p\",\n      \"确保 umi 版本在 2.10.0 以上。\"\n    ],\n    [\n      \"h2\",\n      \"创建新应用\"\n    ],\n    [\n      \"p\",\n      \"启动 Umi UI，\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ umi ui\\n\\n🚀 Starting Umi UI using umi@2.10.4<span class=\\\"token punctuation\\\">..</span>.\\n🧨  Ready on http://localhost:3000/\"\n      },\n      [\n        \"code\",\n        \"$ umi ui\\n\\n🚀 Starting Umi UI using umi@2.10.4...\\n🧨  Ready on http://localhost:3000/\"\n      ]\n    ],\n    [\n      \"p\",\n      \"启动后， Umi UI 会自动打开浏览器，点击 \",\n      [\n        \"code\",\n        \"创建项目\"\n      ],\n      \"，选择路径并输入 \",\n      [\n        \"code\",\n        \"应用名\"\n      ],\n      \"，如下图：\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/1%24I%24KuXNop/60f0bae2-d803-4339-bc09-8df618ebd916.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"点击 \",\n      [\n        \"code\",\n        \"下一步\"\n      ],\n      \"，选择 \",\n      [\n        \"code\",\n        \"基础模板\"\n      ],\n      \"，技术栈选上 \",\n      [\n        \"code\",\n        \"antd\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"dva\"\n      ],\n      \"，然后点击 \",\n      [\n        \"code\",\n        \"完成\"\n      ],\n      \"。\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/9gmy78Evsp/7978f0b2-8b8c-44fa-84df-bfe9dc6065f4.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"进入到项目创建流程，等待几分钟，\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/cT35jkUl4j/8381545c-7f89-48ef-9e93-8adcdd6a3bb4.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"创建完成后，进入到 \",\n      [\n        \"code\",\n        \"总览\"\n      ],\n      \"，点击快捷入口 \",\n      [\n        \"code\",\n        \"本地启动\"\n      ],\n      \"，\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/vGsor%24iku8/531acbd7-f48e-4246-bc77-152117ef56db.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"在任务页中，点击 \",\n      [\n        \"code\",\n        \"启动\"\n      ],\n      \"，\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/RRYNqxBs9g/72ec5739-ac1f-40a6-8f7a-204c7faba0a7.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"按提示，点击 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://localhost:8000\"\n        },\n        \"http://localhost:8000\"\n      ],\n      \"，你会看到 umi 的欢迎界面。\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/2Bm%24zoeBpz/ba708131-c7ac-41f0-92a0-c86007291b6a.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"h2\",\n      \"使用 antd\"\n    ],\n    [\n      \"p\",\n      \"前面选择 antd 之后，会自动处理 antd 的依赖以及按需加载。你可以检查 \",\n      [\n        \"code\",\n        \"配置\"\n      ],\n      \"，确保 antd 已开启。\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/0EFiWipONe/7aea9287-09ff-4396-bb20-d8da28483c2c.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"而如果要使用固定版本的 antd，你可以在项目里安装额外的 antd 依赖，package.json 里声明的 antd 依赖会被优先使用。\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"新建路由\"\n    ],\n    [\n      \"p\",\n      \"我们要写个应用来先显示产品列表。首先第一步是创建路由，路由可以想象成是组成应用的不同页面。\"\n    ],\n    [\n      \"p\",\n      \"然后通过命令创建 \",\n      [\n        \"code\",\n        \"/products\"\n      ],\n      \" 路由，\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ umi g page products\\n\\n   create src/pages/products.js\\n   create src/pages/products.css\\n✔  success\"\n      },\n      [\n        \"code\",\n        \"$ umi g page products\\n\\n   create src/pages/products.js\\n   create src/pages/products.css\\n✔  success\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后在浏览器里打开 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://localhost:8000/products\"\n        },\n        \"http://localhost:8000/products\"\n      ],\n      \"，你应该能看到对应的页面。\"\n    ],\n    [\n      \"h2\",\n      \"编写 UI Component\"\n    ],\n    [\n      \"p\",\n      \"随着应用的发展，你会需要在多个页面分享 UI 元素 (或在一个页面使用多次)，在 umi 里你可以把这部分抽成 component 。\"\n    ],\n    [\n      \"p\",\n      \"我们来编写一个 \",\n      [\n        \"code\",\n        \"ProductList\"\n      ],\n      \" component，这样就能在不同的地方显示产品列表了。\"\n    ],\n    [\n      \"p\",\n      \"点击 \",\n      [\n        \"code\",\n        \"在编辑器中打开\"\n      ],\n      \"，\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/ffPr49NZ%26p/64fa0ad5-9a7a-43c0-b308-ffe28e680a8b.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"然后新建 \",\n      [\n        \"code\",\n        \"src/components/ProductList.js\"\n      ],\n      \" 文件：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Table<span class=\\\"token punctuation\\\">,</span> Popconfirm<span class=\\\"token punctuation\\\">,</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> ProductList <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> onDelete<span class=\\\"token punctuation\\\">,</span> products <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> columns <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Name'</span><span class=\\\"token punctuation\\\">,</span>\\n      dataIndex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Actions'</span><span class=\\\"token punctuation\\\">,</span>\\n      render<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">,</span> record<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token operator\\\">&lt;</span>Popconfirm title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Delete?\\\"</span> onConfirm<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">onDelete</span><span class=\\\"token punctuation\\\">(</span>record<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token operator\\\">&lt;</span>Button<span class=\\\"token operator\\\">></span>Delete<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Popconfirm<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>Table dataSource<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>products<span class=\\\"token punctuation\\\">}</span> columns<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>columns<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> ProductList<span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { Table, Popconfirm, Button } from 'antd';\\n\\nconst ProductList = ({ onDelete, products }) => {\\n  const columns = [\\n    {\\n      title: 'Name',\\n      dataIndex: 'name',\\n    },\\n    {\\n      title: 'Actions',\\n      render: (text, record) => {\\n        return (\\n          <Popconfirm title=\\\"Delete?\\\" onConfirm={() => onDelete(record.id)}>\\n            <Button>Delete</Button>\\n          </Popconfirm>\\n        );\\n      },\\n    },\\n  ];\\n  return <Table dataSource={products} columns={columns} />;\\n};\\n\\nexport default ProductList;\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"定义 dva Model\"\n    ],\n    [\n      \"p\",\n      \"完成 UI 后，现在开始处理数据和逻辑。\"\n    ],\n    [\n      \"p\",\n      \"dva 通过 \",\n      [\n        \"code\",\n        \"model\"\n      ],\n      \" 的概念把一个领域的模型管理起来，包含同步更新 state 的 reducers，处理异步逻辑的 effects，订阅数据源的 subscriptions 。\"\n    ],\n    [\n      \"p\",\n      \"新建 model \",\n      [\n        \"code\",\n        \"src/models/products.js\"\n      ],\n      \"，\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  namespace<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'products'</span><span class=\\\"token punctuation\\\">,</span>\\n  state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  reducers<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">delete</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> payload<span class=\\\"token punctuation\\\">:</span> id <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> item<span class=\\\"token punctuation\\\">.</span>id <span class=\\\"token operator\\\">!==</span> id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"export default {\\n  namespace: 'products',\\n  state: [],\\n  reducers: {\\n    delete(state, { payload: id }) {\\n      return state.filter(item => item.id !== id);\\n    },\\n  },\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"这个 model 里：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"namespace\"\n          ],\n          \" 表示在全局 state 上的 key\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"state\"\n          ],\n          \" 是初始值，在这里是空数组\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"reducers\"\n          ],\n          \" 等同于 redux 里的 reducer，接收 action，同步更新 state\"\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"umi 里约定 \",\n      [\n        \"code\",\n        \"src/models\"\n      ],\n      \" 下的 model 会被自动注入，你无需手动注入。\"\n    ],\n    [\n      \"h2\",\n      \"connect 起来\"\n    ],\n    [\n      \"p\",\n      \"到这里，我们已经单独完成了 model 和 component，那么他们如何串联起来呢?\"\n    ],\n    [\n      \"p\",\n      \"dva 提供了 \",\n      [\n        \"code\",\n        \"connect\"\n      ],\n      \" 方法。如果你熟悉 redux，这个 connect 来自 react-redux。\"\n    ],\n    [\n      \"p\",\n      \"编辑 \",\n      [\n        \"code\",\n        \"src/pages/products.js\"\n      ],\n      \"，替换为以下内容：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> connect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'dva'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ProductList <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/ProductList'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Products <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> dispatch<span class=\\\"token punctuation\\\">,</span> products <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">handleDelete</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'products/delete'</span><span class=\\\"token punctuation\\\">,</span>\\n      payload<span class=\\\"token punctuation\\\">:</span> id<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h2<span class=\\\"token operator\\\">></span>List <span class=\\\"token keyword\\\">of</span> Products<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>ProductList onDelete<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleDelete<span class=\\\"token punctuation\\\">}</span> products<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>products<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> products <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  products<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Products<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { connect } from 'dva';\\nimport ProductList from '../components/ProductList';\\n\\nconst Products = ({ dispatch, products }) => {\\n  function handleDelete(id) {\\n    dispatch({\\n      type: 'products/delete',\\n      payload: id,\\n    });\\n  }\\n  return (\\n    <div>\\n      <h2>List of Products</h2>\\n      <ProductList onDelete={handleDelete} products={products} />\\n    </div>\\n  );\\n};\\n\\nexport default connect(({ products }) => ({\\n  products,\\n}))(Products);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"最后，我们还需要一些初始数据让这个应用 run 起来。编辑 \",\n      [\n        \"code\",\n        \"src/app.js\"\n      ],\n      \"：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> dva <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  config<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">onError</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      err<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    initialState<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      products<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'dva'</span><span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"export const dva = {\\n  config: {\\n    onError(err) {\\n      err.preventDefault();\\n      console.error(err.message);\\n    },\\n    initialState: {\\n      products: [{ name: 'dva', id: 1 }, { name: 'antd', id: 2 }],\\n    },\\n  },\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"刷新浏览器，应该能看到以下效果：\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://zos.alipayobjects.com/rmsportal/GQJeDDeUCSTRMMg.gif\"\n        }\n      ]\n    ],\n    [\n      \"h2\",\n      \"构建应用\"\n    ],\n    [\n      \"p\",\n      \"完成开发并且在开发环境验证之后，就需要部署给我们的用户了。点击 \",\n      [\n        \"code\",\n        \"构建\"\n      ],\n      \"，\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/D%2671c0zDk%26/a6c69c76-28e1-4001-9228-3affe8468e2f.png\",\n          \"width\": \"718\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"构建会打包所有的资源，包含 JavaScript, CSS, web fonts, images, html 等。你可以在 \",\n      [\n        \"code\",\n        \"dist/\"\n      ],\n      \" 目录下找到这些文件。\"\n    ],\n    [\n      \"h2\",\n      \"下一步\"\n    ],\n    [\n      \"p\",\n      \"我们已经完成了一个简单应用，你可能还有很多疑问，比如：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何统一处理出错？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何处理更多路由，比如动态路由，嵌套路由，权限路由等？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何 mock 数据？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何部署？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"等等\"\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"你可以：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"访问 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://umijs.org/\"\n            },\n            \"umi 官网\"\n          ],\n          \"和 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://dvajs.com/\"\n            },\n            \"dva 官网\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"理解 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://umijs.org/zh/guide/router.html\"\n            },\n            \"umi 的路由\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"理解 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://umijs.org/zh/guide/deploy.html\"\n            },\n            \"如何部署 umi 应用\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"查看 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://dvajs.com/knowledgemap/\"\n            },\n            \"dva 知识地图\"\n          ],\n          \"，包含 ES6, React, dva 等所有基础知识\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"理解 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://dvajs.com/guide/concepts.html\"\n            },\n            \"dva 的 8 个概念\"\n          ],\n          \"，以及他们是如何串起来的\"\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"order\": 2,\n    \"title\": \"项目实战\",\n    \"filename\": \"docs/react/practical-projects.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#安装-Umi-UI\",\n          \"title\": \"安装 Umi UI\"\n        },\n        \"安装 Umi UI\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#创建新应用\",\n          \"title\": \"创建新应用\"\n        },\n        \"创建新应用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#使用-antd\",\n          \"title\": \"使用 antd\"\n        },\n        \"使用 antd\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#新建路由\",\n          \"title\": \"新建路由\"\n        },\n        \"新建路由\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#编写-UI-Component\",\n          \"title\": \"编写 UI Component\"\n        },\n        \"编写 UI Component\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#定义-dva-Model\",\n          \"title\": \"定义 dva Model\"\n        },\n        \"定义 dva Model\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#connect-起来\",\n          \"title\": \"connect 起来\"\n        },\n        \"connect 起来\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#构建应用\",\n          \"title\": \"构建应用\"\n        },\n        \"构建应用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#下一步\",\n          \"title\": \"下一步\"\n        },\n        \"下一步\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}