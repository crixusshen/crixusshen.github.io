{"version":3,"sources":["webpack:///./docs/react/use-in-typescript.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uJAAuJ,qDAAqD,gIAAgI,6LAA6L,uIAAuI,oOAAoO,+KAA+K,qMAAqM,kYAAkY,gYAAgY,wKAAwK,sJAAsJ,8CAA8C,4CAA4C,0IAA0I;AAC5gF,OAAO;AACP;AACA;AACA,wBAAwB,YAAY,cAAc,sCAAsC,qBAAqB,iCAAiC,cAAc,qHAAqH,KAAK,GAAG,uBAAuB;AAChT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2LAA2L,mIAAmI,+IAA+I,4CAA4C;AACzf,OAAO;AACP;AACA;AACA,uCAAuC,UAAU,uBAAuB,GAAG;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,keAAke;AAC5hB,OAAO;AACP;AACA;AACA,2CAA2C,iQAAiQ;AAC5S;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gYAAgY,mMAAmM,4CAA4C,0CAA0C;AACzpB,OAAO;AACP;AACA;AACA,0DAA0D,4DAA4D,IAAI;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B,4BAA4B,4FAA4F,0IAA0I,2CAA2C,2IAA2I,+OAA+O,8CAA8C;AACjzB,OAAO;AACP;AACA;AACA,kBAAkB,4BAA4B,4BAA4B,uDAAuD,gEAAgE,MAAM,+DAA+D,uFAAuF,QAAQ;AACrW;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY,cAAc,sEAAsE,kDAAkD,SAAS,aAAa,8BAA8B,mCAAmC,gBAAgB,8BAA8B,sCAAsC,kCAAkC,sBAAsB,eAAe,OAAO,KAAK,yBAAyB;AACpe,OAAO;AACP;AACA;AACA,4CAA4C,YAAY,cAAc,wCAAwC,YAAY,SAAS,aAAa,uBAAuB,mCAAmC,gBAAgB,+HAA+H,OAAO,KAAK,yBAAyB;AAC9X;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,4BAA4B,4BAA4B,iDAAiD,2CAA2C,4BAA4B,oEAAoE,4KAA4K,oDAAoD,6HAA6H,8BAA8B,4CAA4C,aAAa;AACvuB,OAAO;AACP;AACA;AACA,kBAAkB,4BAA4B,4BAA4B,WAAW,2CAA2C,4BAA4B,6DAA6D,iGAAiG,qBAAqB,iDAAiD,8BAA8B,MAAM,MAAM;AAC1aaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,E","file":"docs/react/use-in-typescript.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    {\n\n    },\n    [\n      \"h2\",\n      \"安装和初始化\"\n    ],\n    [\n      \"p\",\n      \"请确保电脑上已经安装了最新版的 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://yarnpkg.com\"\n        },\n        \"yarn\"\n      ],\n      \" 或者 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://www.npmjs.com/\"\n        },\n        \"npm\"\n      ],\n      \"。\"\n    ],\n    [\n      \"p\",\n      \"使用 yarn 创建 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/facebook/create-react-app/tree/master/packages/cra-template-typescript\"\n        },\n        \"cra-template-typescript\"\n      ],\n      \" 项目。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn create react-app antd-demo-ts --template typescript\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># or</span>\\n\\nnpx create-react-app my-app --template typescript\"\n      },\n      [\n        \"code\",\n        \"$ yarn create react-app antd-demo-ts --template typescript\\n\\n# or\\n\\nnpx create-react-app my-app --template typescript\"\n      ]\n    ],\n    [\n      \"p\",\n      \"如果你使用的是 npm（接下来我们都会用 yarn 作为例子，如果你习惯用 npm 也没问题）。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ npx create-react-app antd-demo-ts --typescript\"\n      },\n      [\n        \"code\",\n        \"$ npx create-react-app antd-demo-ts --typescript\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后我们进入项目并启动。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ <span class=\\\"token function\\\">cd</span> antd-demo-ts\\n$ yarn start\"\n      },\n      [\n        \"code\",\n        \"$ cd antd-demo-ts\\n$ yarn start\"\n      ]\n    ],\n    [\n      \"p\",\n      \"此时浏览器会访问 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://localhost:3000/\"\n        },\n        \"http://localhost:3000/\"\n      ],\n      \" ，看到 \",\n      [\n        \"code\",\n        \"Welcome to React\"\n      ],\n      \" 的界面就算成功了。\"\n    ],\n    [\n      \"h2\",\n      \"引入 antd\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn add antd\"\n      },\n      [\n        \"code\",\n        \"$ yarn add antd\"\n      ]\n    ],\n    [\n      \"p\",\n      \"修改 \",\n      [\n        \"code\",\n        \"src/App.tsx\"\n      ],\n      \"，引入 antd 的按钮组件。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Button <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd/es/button'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./App.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">App</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>App<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>primary<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>Button<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> App<span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import React, { Component } from 'react';\\nimport Button from 'antd/es/button';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Button type=\\\"primary\\\">Button</Button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\"\n      ]\n    ],\n    [\n      \"p\",\n      \"修改 \",\n      [\n        \"code\",\n        \"src/App.css\"\n      ],\n      \" 引入 antd 的样式。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"css\",\n        \"highlighted\": \"<span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@import</span> <span class=\\\"token string\\\">'~antd/dist/antd.css'</span><span class=\\\"token punctuation\\\">;</span></span>\\n\\n<span class=\\\"token selector\\\"><span class=\\\"token class\\\">.App</span> </span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">text-align</span><span class=\\\"token punctuation\\\">:</span> center<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token number\\\">...</span>\"\n      },\n      [\n        \"code\",\n        \"@import '~antd/dist/antd.css';\\n\\n.App {\\n  text-align: center;\\n}\\n\\n...\"\n      ]\n    ],\n    [\n      \"p\",\n      \"重新启动 \",\n      [\n        \"code\",\n        \"yarn start\"\n      ],\n      \"，现在你应该能看到页面上已经有了 antd 的蓝色按钮组件，接下来就可以继续选用其他组件开发应用了。其他开发流程你可以参考 create-react-app 的\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md\"\n        },\n        \"官方文档\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h2\",\n      \"高级配置\"\n    ],\n    [\n      \"p\",\n      \"我们现在已经把组件成功运行起来了，但是在实际开发过程中还有很多问题，例如上面的例子实际上加载了全部的 antd 组件的样式（对前端性能是个隐患）。\"\n    ],\n    [\n      \"p\",\n      \"此时我们需要对 create-react-app 的默认配置进行自定义，这里我们使用 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/timarney/react-app-rewired\"\n        },\n        \"react-app-rewired\"\n      ],\n      \" （一个对 create-react-app 进行自定义配置的社区解决方案）。\"\n    ],\n    [\n      \"p\",\n      \"引入 react-app-rewired 并修改 package.json 里的启动配置。由于新的 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/timarney/react-app-rewired#alternatives\"\n        },\n        \"react-app-rewired@2.x\"\n      ],\n      \" 版本的关系，你还需要安装 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/arackaf/customize-cra\"\n        },\n        \"customize-cra\"\n      ],\n      \"。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": null,\n        \"highlighted\": \"$ yarn add react<span class=\\\"token operator\\\">-</span>app<span class=\\\"token operator\\\">-</span>rewired customize<span class=\\\"token operator\\\">-</span>cra\"\n      },\n      [\n        \"code\",\n        \"$ yarn add react-app-rewired customize-cra\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"/* package.json */\\n\\\"scripts\\\": {\\n<span class=\\\"token deleted\\\">-   \\\"start\\\": \\\"react-scripts start\\\",</span>\\n<span class=\\\"token inserted\\\">+   \\\"start\\\": \\\"react-app-rewired start\\\",</span>\\n<span class=\\\"token deleted\\\">-   \\\"build\\\": \\\"react-scripts build\\\",</span>\\n<span class=\\\"token inserted\\\">+   \\\"build\\\": \\\"react-app-rewired build\\\",</span>\\n<span class=\\\"token deleted\\\">-   \\\"test\\\": \\\"react-scripts test\\\",</span>\\n<span class=\\\"token inserted\\\">+   \\\"test\\\": \\\"react-app-rewired test\\\",</span>\\n}\"\n      },\n      [\n        \"code\",\n        \"/* package.json */\\n\\\"scripts\\\": {\\n-   \\\"start\\\": \\\"react-scripts start\\\",\\n+   \\\"start\\\": \\\"react-app-rewired start\\\",\\n-   \\\"build\\\": \\\"react-scripts build\\\",\\n+   \\\"build\\\": \\\"react-app-rewired build\\\",\\n-   \\\"test\\\": \\\"react-scripts test\\\",\\n+   \\\"test\\\": \\\"react-app-rewired test\\\",\\n}\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后在项目根目录创建一个 \",\n      [\n        \"code\",\n        \"config-overrides.js\"\n      ],\n      \" 用于修改默认配置。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">override</span><span class=\\\"token punctuation\\\">(</span>config<span class=\\\"token punctuation\\\">,</span> env<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// do stuff with the webpack config...</span>\\n  <span class=\\\"token keyword\\\">return</span> config<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"module.exports = function override(config, env) {\\n  // do stuff with the webpack config...\\n  return config;\\n};\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"使用 babel-plugin-import\"\n    ],\n    [\n      \"p\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/babel-plugin-import\"\n        },\n        \"babel-plugin-import\"\n      ],\n      \" 是一个用于按需加载组件代码和样式的 babel 插件（\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/getting-started#按需加载\"\n        },\n        \"原理\"\n      ],\n      \"），现在我们尝试安装它并修改 \",\n      [\n        \"code\",\n        \"config-overrides.js\"\n      ],\n      \" 文件。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn add babel-plugin-import\"\n      },\n      [\n        \"code\",\n        \"$ yarn add babel-plugin-import\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token inserted\\\">+ const { override, fixBabelImports } = require('customize-cra');</span>\\n\\n<span class=\\\"token deleted\\\">- module.exports = function override(config, env) {</span>\\n<span class=\\\"token deleted\\\">-   // do stuff with the webpack config...</span>\\n<span class=\\\"token deleted\\\">-   return config;</span>\\n<span class=\\\"token deleted\\\">- };</span>\\n<span class=\\\"token inserted\\\">+ module.exports = override(</span>\\n<span class=\\\"token inserted\\\">+   fixBabelImports('import', {</span>\\n<span class=\\\"token inserted\\\">+     libraryName: 'antd',</span>\\n<span class=\\\"token inserted\\\">+     libraryDirectory: 'es',</span>\\n<span class=\\\"token inserted\\\">+     style: 'css',</span>\\n<span class=\\\"token inserted\\\">+   }),</span>\\n<span class=\\\"token inserted\\\">+ );</span>\"\n      },\n      [\n        \"code\",\n        \"+ const { override, fixBabelImports } = require('customize-cra');\\n\\n- module.exports = function override(config, env) {\\n-   // do stuff with the webpack config...\\n-   return config;\\n- };\\n+ module.exports = override(\\n+   fixBabelImports('import', {\\n+     libraryName: 'antd',\\n+     libraryDirectory: 'es',\\n+     style: 'css',\\n+   }),\\n+ );\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后移除前面在 \",\n      [\n        \"code\",\n        \"src/App.css\"\n      ],\n      \" 里全量添加的 \",\n      [\n        \"code\",\n        \"@import '~antd/dist/antd.css';\"\n      ],\n      \" 样式代码，并且按下面的格式引入模块。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"  // src/App.tsx\\n  import React, { Component } from 'react';\\n<span class=\\\"token deleted\\\">- import Button from 'antd/es/button';</span>\\n<span class=\\\"token inserted\\\">+ import { Button } from 'antd';</span>\\n  import './App.css';\\n\\n  class App extends Component {\\n    render() {\\n      return (\\n        &lt;div className=\\\"App\\\">\\n          &lt;Button type=\\\"primary\\\">Button&lt;/Button>\\n        &lt;/div>\\n      );\\n    }\\n  }\\n\\n  export default App;\"\n      },\n      [\n        \"code\",\n        \"  // src/App.tsx\\n  import React, { Component } from 'react';\\n- import Button from 'antd/es/button';\\n+ import { Button } from 'antd';\\n  import './App.css';\\n\\n  class App extends Component {\\n    render() {\\n      return (\\n        <div className=\\\"App\\\">\\n          <Button type=\\\"primary\\\">Button</Button>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  export default App;\"\n      ]\n    ],\n    [\n      \"p\",\n      \"最后重启 \",\n      [\n        \"code\",\n        \"yarn start\"\n      ],\n      \" 访问页面，antd 组件的 js 和 css 代码都会按需加载，你在控制台也不会看到这样的\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://zos.alipayobjects.com/rmsportal/vgcHJRVZFmPjAawwVoXK.png\"\n        },\n        \"警告信息\"\n      ],\n      \"。关于按需加载的原理和其他方式可以阅读\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/getting-started#按需加载\"\n        },\n        \"这里\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      \"自定义主题\"\n    ],\n    [\n      \"p\",\n      \"按照 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme\"\n        },\n        \"配置主题\"\n      ],\n      \" 的要求，自定义主题需要用到 less 变量覆盖功能。我们可以引入 \",\n      [\n        \"code\",\n        \"customize-cra\"\n      ],\n      \" 中提供的 less 相关的函数 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/arackaf/customize-cra#addlessloaderloaderoptions\"\n        },\n        \"addLessLoader\"\n      ],\n      \" 来帮助加载 less 样式，同时修改 \",\n      [\n        \"code\",\n        \"config-overrides.js\"\n      ],\n      \" 文件如下。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">- const { override, fixBabelImports } = require('customize-cra');</span>\\n<span class=\\\"token inserted\\\">+ const { override, fixBabelImports, addLessLoader } = require('customize-cra');</span>\\n\\nmodule.exports = override(\\n  fixBabelImports('import', {\\n    libraryName: 'antd',\\n    libraryDirectory: 'es',\\n<span class=\\\"token deleted\\\">-   style: 'css',</span>\\n<span class=\\\"token inserted\\\">+   style: true,</span>\\n  }),\\n<span class=\\\"token inserted\\\">+ addLessLoader({</span>\\n<span class=\\\"token inserted\\\">+   javascriptEnabled: true,</span>\\n<span class=\\\"token inserted\\\">+   modifyVars: { '@primary-color': '#1DA57A' },</span>\\n<span class=\\\"token inserted\\\">+ }),</span>\\n);\"\n      },\n      [\n        \"code\",\n        \"- const { override, fixBabelImports } = require('customize-cra');\\n+ const { override, fixBabelImports, addLessLoader } = require('customize-cra');\\n\\nmodule.exports = override(\\n  fixBabelImports('import', {\\n    libraryName: 'antd',\\n    libraryDirectory: 'es',\\n-   style: 'css',\\n+   style: true,\\n  }),\\n+ addLessLoader({\\n+   javascriptEnabled: true,\\n+   modifyVars: { '@primary-color': '#1DA57A' },\\n+ }),\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"这里利用了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/webpack/less-loader#less-options\"\n        },\n        \"less-loader\"\n      ],\n      \" 的 \",\n      [\n        \"code\",\n        \"modifyVars\"\n      ],\n      \" 来进行主题配置，变量和其他配置方式可以参考 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme\"\n        },\n        \"配置主题\"\n      ],\n      \" 文档。\"\n    ],\n    [\n      \"p\",\n      \"修改后重启 \",\n      [\n        \"code\",\n        \"yarn start\"\n      ],\n      \"，如果看到一个绿色的按钮就说明配置成功了。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"对于自定义 webpack 配置，你也可以使用 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://github.com/sharegate/craco\"\n          },\n          \"craco\"\n        ],\n        \" 和 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://github.com/FormAPI/craco-antd\"\n          },\n          \"craco-antd\"\n        ],\n        \" 来实现和 customize-cra 一样的修改 create-react-app 配置的功能。\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"其他方案\"\n    ],\n    [\n      \"p\",\n      \"先按照 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/use-with-create-react-app.en-US.md\"\n        },\n        \"在 create-react-app 中使用\"\n      ],\n      \" 中的说明操作，再配置 TypeScript 开发环境。\"\n    ],\n    [\n      \"p\",\n      \"你也可以使用 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://www.npmjs.com/package/react-scripts-ts-antd\"\n        },\n        \"react-scripts-ts-antd\"\n      ],\n      \"，其中包括了 ts-import-plugin，react-app-rewired，scss，less 等插件。你可以通过只运行一个命令来创建一个没有任何配置的新项目。\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/SZzzzz/react-scripts-ts-antd\"\n            },\n            \"Create React apps (with Typescript and antd) with no build configuration\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"span\",\n            \"react-app-rewire-typescript\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/Brooooooklyn/ts-import-plugin\"\n            },\n            \"ts-import-plugin\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://facebook.github.io/create-react-app/docs/adding-typescript\"\n            },\n            \"create-react-app Adding TypeScript\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://vincenttunru.com/migrate-create-react-app-typescript-to-create-react-app/\"\n            },\n            \"Migrating from create-react-app-typescript to Create React App\"\n          ]\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"order\": 4,\n    \"title\": \"在 TypeScript 中使用\",\n    \"filename\": \"docs/react/use-in-typescript.zh-CN.md\"\n  },\n  \"description\": [\n    \"section\",\n    [\n      \"p\",\n      \"使用 \",\n      [\n        \"code\",\n        \"create-react-app\"\n      ],\n      \" 一步步地创建一个 TypeScript 项目，并引入 antd。\"\n    ]\n  ],\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#安装和初始化\",\n          \"title\": \"安装和初始化\"\n        },\n        \"安装和初始化\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#引入-antd\",\n          \"title\": \"引入 antd\"\n        },\n        \"引入 antd\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#高级配置\",\n          \"title\": \"高级配置\"\n        },\n        \"高级配置\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#其他方案\",\n          \"title\": \"其他方案\"\n        },\n        \"其他方案\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}