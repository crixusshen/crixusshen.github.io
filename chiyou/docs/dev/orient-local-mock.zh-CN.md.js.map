{"version":3,"sources":["webpack:///./docs/dev/orient-local-mock.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oJAAoJ,kOAAkO,qSAAqS,qQAAqQ,8HAA8H,gfAAgf,oQAAoQ,8CAA8C,4CAA4C,0CAA0C;AACt5D,OAAO;AACP;AACA;AACA,yBAAyB,mDAAmD,gBAAgB,6CAA6C,QAAQ,iFAAiF,sBAAsB,KAAK,IAAI;AACjQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK,imBAAimB;AACjwB,OAAO;AACP;AACA;AACA,kCAAkC,2FAA2F;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sMAAsM,uIAAuI,gWAAgW,qLAAqL,keAAke,wFAAwF,sFAAsF,0CAA0C;AAC5hD,OAAO;AACP;AACA;AACA,uCAAuC,oBAAoB,yDAAyD,sBAAsB,wDAAwD,MAAM,KAAK;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uXAAuX,8ZAA8Z,yFAAyF;AAC92B,OAAO;AACP;AACA;AACA,kDAAkD,6DAA6D,UAAU;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gXAAgX,4SAA4S,mQAAmQ,8CAA8C,uKAAuK,4CAA4C;AAChqC,OAAO;AACP;AACA;AACA,2CAA2C,sBAAsB,qBAAqB,KAAK,QAAQ,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,iDAAiD,4IAA4I,uIAAuI,yuBAAyuB,qLAAqL,keAAke,wFAAwF,6lCAA6lC,iLAAiL,uIAAuI,oFAAoF,8CAA8C,uMAAuM,0CAA0C,4aAA4a;AACvjI,OAAO;AACP;AACA;AACA,iBAAiB,QAAQ,0BAA0B,mBAAmB,yJAAyJ,sBAAsB,wDAAwD,MAAM,sPAAsP,gBAAgB,iBAAiB,EAAE,KAAK,yCAAyC,2DAA2D;AACrrfile":"docs/dev/orient-local-mock.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"在前后端分离的开发中，Mock 数据是前端开发中很重要的一个环节，前端可以不必强依赖后端接口，只需要约定好对应的数据接口，前端可以通过 Mock 模拟数据先行开发，在后端接口开发完成后，只需要切换对应的接口地址即可，可以保证项目的同步开发。\"\n    ],\n    [\n      \"p\",\n      \"在蚩尤中，底层框架是 umi，它自带代理请求功能，通过代理请求能够轻松处理数据模拟的功能。\"\n    ],\n    [\n      \"h2\",\n      \"使用 umi 的 mock 功能\"\n    ],\n    [\n      \"p\",\n      \"umi 里约定 mock 文件夹下的文件即 mock 文件，文件导出接口定义，支持基于 require 动态分析的实时刷新，支持 ES6 语法，以及友好的出错提示。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 支持值为 Object 和 Array</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/users\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> users<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// GET POST 可省略</span>\\n  <span class=\\\"token string\\\">\\\"/api/users/1\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 支持自定义函数，API 参考 express@4</span>\\n  <span class=\\\"token string\\\">\\\"POST /api/users/create\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"OK\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"export default {\\n  // 支持值为 Object 和 Array\\n  \\\"GET /api/users\\\": { users: [1, 2] },\\n\\n  // GET POST 可省略\\n  \\\"/api/users/1\\\": { id: 1 },\\n\\n  // 支持自定义函数，API 参考 express@4\\n  \\\"POST /api/users/create\\\": (req, res) => {\\n    res.end(\\\"OK\\\");\\n  }\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"当客户端（浏览器）发送请求，如：\",\n      [\n        \"code\",\n        \"GET /api/users\"\n      ],\n      \"，那么本地启动的 \",\n      [\n        \"code\",\n        \"umi dev\"\n      ],\n      \" 会跟此配置文件匹配请求路径以及方法，如果匹配到了，就会将请求通过配置处理，就可以像样例一样，你可以直接返回数据，也可以通过函数处理以及重定向到另一个服务器。\"\n    ],\n    [\n      \"p\",\n      \"比如定义如下映射规则：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token string\\\">'GET /api/currentUser'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'momo.zxy'</span><span class=\\\"token punctuation\\\">,</span>\\n  avatar<span class=\\\"token punctuation\\\">:</span> imgMap<span class=\\\"token punctuation\\\">.</span>user<span class=\\\"token punctuation\\\">,</span>\\n  userid<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'00000001'</span><span class=\\\"token punctuation\\\">,</span>\\n  notifyCount<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\"\n      },\n      [\n        \"code\",\n        \"'GET /api/currentUser': {\\n  name: 'momo.zxy',\\n  avatar: imgMap.user,\\n  userid: '00000001',\\n  notifyCount: 12,\\n},\"\n      ]\n    ],\n    [\n      \"p\",\n      \"访问的本地 \",\n      [\n        \"code\",\n        \"/api/currentUser\"\n      ],\n      \" 接口：\"\n    ],\n    [\n      \"p\",\n      \"请求头：\"\n    ],\n    [\n      \"div\",\n      {\n        \"style\": \"text-align: center; margin: 40px 0px;\"\n      },\n      [\n        \"img\",\n        {\n          \"width\": \"100%\",\n          \"src\": \"https://s2.ax1x.com/2020/01/31/11bti9.png\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"返回的数据：\"\n    ],\n    [\n      \"div\",\n      {\n        \"style\": \"text-align: center; margin: 40px 0px;\"\n      },\n      [\n        \"img\",\n        {\n          \"width\": \"100%\",\n          \"src\": \"https://s2.ax1x.com/2020/01/31/11bRzt.png\"\n        }\n      ]\n    ],\n    [\n      \"h2\",\n      \"引入 Mock.ts\"\n    ],\n    [\n      \"p\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://mockjs.com/\"\n        },\n        \"Mock.ts\"\n      ],\n      \" 是常用的辅助生成模拟数据的第三方库，当然你可以用你喜欢的任意库来结合 umi 构建数据模拟功能，如 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://chancejs.com/\"\n        },\n        \"chancejs\"\n      ],\n      \"。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> mockjs <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"mockjs\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 使用 mockjs 等三方库</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/tags\\\"</span><span class=\\\"token punctuation\\\">:</span> mockjs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mock</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">\\\"list|100\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"@city\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"value|1-100\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"type|0-2\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import mockjs from \\\"mockjs\\\";\\n\\nexport default {\\n  // 使用 mockjs 等三方库\\n  \\\"GET /api/tags\\\": mockjs.mock({\\n    \\\"list|100\\\": [{ name: \\\"@city\\\", \\\"value|1-100\\\": 50, \\\"type|0-2\\\": 1 }]\\n  })\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"添加跨域请求头\"\n    ],\n    [\n      \"p\",\n      \"设置 \",\n      [\n        \"code\",\n        \"response\"\n      ],\n      \" 的请求头即可：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token string\\\">'POST /api/users/create'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token operator\\\">...</span>\\n  res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setHeader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Access-Control-Allow-Origin'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'*'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\"\n      },\n      [\n        \"code\",\n        \"'POST /api/users/create': (req, res) => {\\n  ...\\n  res.setHeader('Access-Control-Allow-Origin', '*');\\n  ...\\n},\"\n      ]\n    ],\n    [\n      \"p\",\n      \"具体可查看 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/dev/orient-local-proxy#CORS\"\n        },\n        \"CORS\"\n      ],\n      \" 的介绍。\"\n    ],\n    [\n      \"h2\",\n      \"合理的拆分你的 mock 文件\"\n    ],\n    [\n      \"p\",\n      \"对于整个系统来说，请求接口是复杂并且繁多的，为了处理大量模拟请求的场景，我们通常把每一个数据模型抽象成一个文件，统一放在 \",\n      [\n        \"code\",\n        \"mock\"\n      ],\n      \" 文件夹中，然后他们会自动被引入，请开发者们遵循这样的规范。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"mock\\n  user<span class=\\\"token punctuation\\\">.</span>ts <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// user相关mock</span>\\n  notices<span class=\\\"token punctuation\\\">.</span>ts  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// notices相关mock</span>\\n  login<span class=\\\"token punctuation\\\">.</span>ts  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// login相关mock</span>\\n  <span class=\\\"token operator\\\">...</span>\"\n      },\n      [\n        \"code\",\n        \"mock\\n  user.ts // user相关mock\\n  notices.ts  // notices相关mock\\n  login.ts  // login相关mock\\n  ...\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"如何模拟延迟\"\n    ],\n    [\n      \"p\",\n      \"为了更加真实地模拟网络数据请求，往往需要模拟网络延迟时间。\"\n    ],\n    [\n      \"h2\",\n      \"手动添加 setTimeout 模拟延迟\"\n    ],\n    [\n      \"p\",\n      \"你可以重写请求的代理方法，在其中添加模拟延迟的处理，如：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token string\\\">'POST /api/forms'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Ok'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\"\n      },\n      [\n        \"code\",\n        \"'POST /api/forms': (req, res) => {\\n  setTimeout(() => {\\n    res.send('Ok');\\n  }, 1000);\\n},\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"使用插件模拟延迟\"\n    ],\n    [\n      \"p\",\n      \"上面的方法虽然简便，但是当你需要添加所有的请求延迟的时候，可能就麻烦了，不过可以通过第三方插件来简化这个问题，如：\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/nikogu/roadhog-api-doc\"\n        },\n        \"roadhog-api-doc#delay\"\n      ],\n      \"。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> delay <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"roadhog-api-doc\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> proxy <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/project/notice\\\"</span><span class=\\\"token punctuation\\\">:</span> getNotice<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/activities\\\"</span><span class=\\\"token punctuation\\\">:</span> getActivities<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/rule\\\"</span><span class=\\\"token punctuation\\\">:</span> getRule<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/tags\\\"</span><span class=\\\"token punctuation\\\">:</span> mockjs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mock</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">\\\"list|100\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"@city\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"value|1-100\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"type|0-2\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/fake_list\\\"</span><span class=\\\"token punctuation\\\">:</span> getFakeList<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/fake_chart_data\\\"</span><span class=\\\"token punctuation\\\">:</span> getFakeChartData<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/profile/basic\\\"</span><span class=\\\"token punctuation\\\">:</span> getProfileBasicData<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/profile/advanced\\\"</span><span class=\\\"token punctuation\\\">:</span> getProfileAdvancedData<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"POST /api/register\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> status<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"ok\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"GET /api/notices\\\"</span><span class=\\\"token punctuation\\\">:</span> getNotices\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 调用 delay 函数，统一处理</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">delay</span><span class=\\\"token punctuation\\\">(</span>proxy<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { delay } from \\\"roadhog-api-doc\\\";\\n\\nconst proxy = {\\n  \\\"GET /api/project/notice\\\": getNotice,\\n  \\\"GET /api/activities\\\": getActivities,\\n  \\\"GET /api/rule\\\": getRule,\\n  \\\"GET /api/tags\\\": mockjs.mock({\\n    \\\"list|100\\\": [{ name: \\\"@city\\\", \\\"value|1-100\\\": 50, \\\"type|0-2\\\": 1 }]\\n  }),\\n  \\\"GET /api/fake_list\\\": getFakeList,\\n  \\\"GET /api/fake_chart_data\\\": getFakeChartData,\\n  \\\"GET /api/profile/basic\\\": getProfileBasicData,\\n  \\\"GET /api/profile/advanced\\\": getProfileAdvancedData,\\n  \\\"POST /api/register\\\": (req, res) => {\\n    res.send({ status: \\\"ok\\\" });\\n  },\\n  \\\"GET /api/notices\\\": getNotices\\n};\\n\\n// 调用 delay 函数，统一处理\\nexport default delay(proxy, 1000);\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"联调\"\n    ],\n    [\n      \"p\",\n      \"当本地开发完毕之后，如果服务器的接口满足之前的约定，那么只需要关闭 \",\n      [\n        \"code\",\n        \"mock\"\n      ],\n      \" 数据或者代理到服务端的真实接口地址即可。(如何代理，具体请查看 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/dev/orient-local-proxy\"\n        },\n        \"这里\"\n      ],\n      \")\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"sh\",\n        \"highlighted\": \"$ npm run start<span class=\\\"token punctuation\\\">:</span>no<span class=\\\"token operator\\\">-</span>mock\"\n      },\n      [\n        \"code\",\n        \"$ npm run start:no-mock\"\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"开发\",\n    \"order\": 9,\n    \"title\": \"本地 Mock 方案\",\n    \"filename\": \"docs/dev/orient-local-mock.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#使用-umi-的-mock-功能\",\n          \"title\": \"使用 umi 的 mock 功能\"\n        },\n        \"使用 umi 的 mock 功能\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#引入-Mock.ts\",\n          \"title\": \"引入 Mock.ts\"\n        },\n        \"引入 Mock.ts\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#添加跨域请求头\",\n          \"title\": \"添加跨域请求头\"\n        },\n        \"添加跨域请求头\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#合理的拆分你的-mock-文件\",\n          \"title\": \"合理的拆分你的 mock 文件\"\n        },\n        \"合理的拆分你的 mock 文件\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#如何模拟延迟\",\n          \"title\": \"如何模拟延迟\"\n        },\n        \"如何模拟延迟\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#手动添加-setTimeout-模拟延迟\",\n          \"title\": \"手动添加 setTimeout 模拟延迟\"\n        },\n        \"手动添加 setTimeout 模拟延迟\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#使用插件模拟延迟\",\n          \"title\": \"使用插件模拟延迟\"\n        },\n        \"使用插件模拟延迟\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#联调\",\n          \"title\": \"联调\"\n        },\n        \"联调\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}