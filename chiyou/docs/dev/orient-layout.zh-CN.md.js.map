{"version":3,"sources":["webpack:///./docs/dev/orient-layout.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2JAA2J,mgBAAmgB,kiBAAkiB,8FAA8F,sFAAsF;AACp3C,OAAO;AACP;AACA;AACA,wBAAwB,mGAAmG,0EAA0E,YAAY,IAAI;AACrN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iJAAiJ,kPAAkP,0TAA0T,kLAAkL,iDAAiD,oDAAoD,kDAAkD,kDAAkD,4KAA4K,wKAAwK,+NAA+N,kLAAkL,0CAA0C;AACv0D,OAAO;AACP;AACA;AACA,gIAAgI,0DAA0D,QAAQ,WAAW,SAAS,uBAAuB,UAAU,mDAAmD,oBAAofile":"docs/dev/orient-layout.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"页面整体布局是一个产品最外层的框架结构，往往会包含导航、页脚、侧边栏、通知栏以及内容等。在页面之中，也有很多区块的布局结构。在真实项目中，页面布局通常统领整个应用的界面，有非常重要的作用。\"\n    ],\n    [\n      \"h2\",\n      \"基础布局\"\n    ],\n    [\n      \"p\",\n      \"我们基于 \",\n      [\n        \"code\",\n        \"antd-pro\"\n      ],\n      \" 的布局抽离了使用过程中的基础布局，都放在 \",\n      [\n        \"code\",\n        \"layouts\"\n      ],\n      \" 目录汇总，分别为：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"BasicLayout： 基础页面布局，包含了头部导航，侧边栏和通知栏：\"\n        ]\n      ]\n    ],\n    [\n      \"div\",\n      {\n        \"style\": \"text-align: center; margin: 40px 0px;\"\n      },\n      [\n        \"img\",\n        {\n          \"width\": \"100%\",\n          \"src\": \"https://s2.ax1x.com/2020/01/27/1nDf6e.png\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"你可遵循这样的目录结构和方式来创建自己的布局。\"\n    ],\n    [\n      \"h2\",\n      \"如何使用布局\"\n    ],\n    [\n      \"p\",\n      \"通常布局是和路由系统紧密结合的，而嵌套路由可使用在这种场景下，我们将配置信息统一抽离到 config/config.ts 下，通过如下配置定义每个页面的布局：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"routers<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"../layouts/BasicLayout\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 指定以下页面的布局</span>\\n    routes<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"用户管理\\\"</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"smile\\\"</span><span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/user\\\"</span><span class=\\\"token punctuation\\\">,</span> component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"./User\\\"</span> <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"routers: [\\n  {\\n    path: \\\"/\\\",\\n    component: \\\"../layouts/BasicLayout\\\", // 指定以下页面的布局\\n    routes: [\\n      { name: \\\"用户管理\\\", icon: \\\"smile\\\", path: \\\"/user\\\", component: \\\"./User\\\" }\\n    ]\\n  }\\n];\"\n      ]\n    ],\n    [\n      \"p\",\n      \"映射路由和页面布局（组件）的关系如代码所示，完整映射转换实现可以参看 config.ts。\"\n    ],\n    [\n      \"h2\",\n      \"基础布局的定制\"\n    ],\n    [\n      \"p\",\n      \"有时候 基础布局 无法完全满足我们所有的业务需求，因此它必须具有必要的定制化能力。我们采用了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design-pro-layout\"\n        },\n        \"ant-design-pro-layout\"\n      ],\n      \" 组件，与一般的组件不同，它非常重型，在其中集成了 菜单，布局，页头，面包屑，设置抽屉等多种功能。上面所述的 BasicLayout 就是基于 ProLayout 进行封装的。\"\n    ],\n    [\n      \"h2\",\n      \"标题和 logo 的定制\"\n    ],\n    [\n      \"p\",\n      \"对于标题和 logo，蚩尤提供了 title 和 logo 属性来自定义，如果你有更强的定制需求，可以试试 \",\n      [\n        \"code\",\n        \"menuHeaderRender: (logoDom,titleDom)=>ReactNode\"\n      ],\n      \" 属性：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// layouts/BasicLayout.tsx:</span>\\n<span class=\\\"token operator\\\">&lt;</span>ProLayout\\n    logo<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"https://s2.ax1x.com/2020/01/27/1nB156.png\\\"</span>\\n    menuHeaderRender<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>logoDom<span class=\\\"token punctuation\\\">,</span> titleDom<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>Link to<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"/\\\"</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span>logoDom<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">{</span>titleDom<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Link<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// config/defaultSettings.ts:</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'蚩尤'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// layouts/BasicLayout.tsx:\\n<ProLayout\\n    logo=\\\"https://s2.ax1x.com/2020/01/27/1nB156.png\\\"\\n    menuHeaderRender={(logoDom, titleDom) => (\\n      <Link to=\\\"/\\\">\\n        {logoDom}\\n        {titleDom}\\n      </Link>\\n    )}\\n  />\\n);\\n\\n// config/defaultSettings.ts:\\nexport default {\\n  title: '蚩尤',\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"更多参数说明请查阅 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design-pro-layout/blob/master/README.zh-CN.md#api\"\n        },\n        \"官方 API\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"PageHeaderWrapper\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"PageHeaderWrapper 必须要被 ProLayout 包裹才能自动生成面包屑和标题。\"\n      ]\n    ],\n    [\n      \"p\",\n      \"PageHeaderWrapper 封装了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/page-header\"\n        },\n        \"PageHeader\"\n      ],\n      \" 组件，增加了 tabList，和 content。 根据当前的路由填入 title 和 breadcrumb。它依赖 Layout 的 route 属性。当然你可以传入参数来复写默认值。 PageHeaderWrapper 支持 Tabs 和 PageHeader 的所有属性。\"\n    ],\n    [\n      \"p\",\n      \"更多参数说明请查阅 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design-pro-layout/blob/master/README.zh-CN.md#pageheaderwrapper\"\n        },\n        \"官方 API\"\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"开发\",\n    \"order\": 5,\n    \"title\": \"布局\",\n    \"filename\": \"docs/dev/orient-layout.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#基础布局\",\n          \"title\": \"基础布局\"\n        },\n        \"基础布局\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#如何使用布局\",\n          \"title\": \"如何使用布局\"\n        },\n        \"如何使用布局\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#基础布局的定制\",\n          \"title\": \"基础布局的定制\"\n        },\n        \"基础布局的定制\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#标题和-logo-的定制\",\n          \"title\": \"标题和 logo 的定制\"\n        },\n        \"标题和 logo 的定制\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#PageHeaderWrapper\",\n          \"title\": \"PageHeaderWrapper\"\n        },\n        \"PageHeaderWrapper\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}