{"version":3,"sources":["webpack:///./docs/dev/orient-code-quality-assurance.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2JAA2J,goBAAgoB,iUAAiU,0IAA0I,0HAA0H,4CAA4C,0CAA0C;AACt7C,OAAO;AACP;AACA;AACA,2BAA2B,uGAAuG,mFAAmF,eAAe,wBAAwB,IAAI;AAChQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2UAA2U,2IAA2I,8FAA8F,0HAA0H,4CAA4C,0CAA0C,8IAA8I,kPAAkP,0CAA0C;AAC9qC,OAAO;AACP;AACA;AACA,mDAAmD,uBAAuB,YAAY,wBAAwB,IAAI,sBAAsB,4CAA4C;AACpL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2UAA2U,2IAA2I,sHAAsH,0CAA0C,8IAA8I,iPAAiP,0CAA0C;AAC/hC,OAAO;AACP;AACA;AACA,mDAAmD,uBAAuB,qBAAqB,sBAAsB,2CAA2C;AAChfile":"docs/dev/orient-code-quality-assurance.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"为了保证代码质量，我们推荐使用 lint 相关的工具对代码进行检测，同时为了降低常规 lint 工具的使用成本，框架内部已封装了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/umijs/fabric\"\n        },\n        \"fabric\"\n      ],\n      \" 这个 npm 包。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"fabric 是一个包含 prettier、 eslint、 stylelint 的配置合集，屏蔽了繁琐的配置信息\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"引入配置文件\"\n    ],\n    [\n      \"h2\",\n      \"eslint\"\n    ],\n    [\n      \"p\",\n      \"eslint 用来检测 js 代码的风格，在根目录下新建配置文件 \",\n      [\n        \"code\",\n        \".eslintrc.js\"\n      ],\n      \" 即可引入 lint 规则：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">extends</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>require<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"@umijs/fabric/dist/eslint\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// in antd-design-pro</span>\\n  globals<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    page<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// your rules</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"module.exports = {\\n  extends: [require.resolve(\\\"@umijs/fabric/dist/eslint\\\")],\\n\\n  // in antd-design-pro\\n  globals: {\\n    ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION: true,\\n    page: true\\n  },\\n\\n  rules: {\\n    // your rules\\n  }\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"tslint\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"tslint 目前已被官方确认废弃，今后不再维护，取而代之的将是 eslint，想了解详情可参考我们之前的\",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://5057399d.wiz03.com/wapp/pages/view/share/s/1glPCt3ocQ572YRO-u1VtQLl1ef8SW07pAkw25D3-s0rDQDP\"\n          },\n          \"深入研究\"\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"如果你的项目使用的是 TypeScript，也可使用上面的 eslint 来配置。\"\n    ],\n    [\n      \"p\",\n      \"ts 的 lint 规则并不是在 eslint 官方查询的，具体请到 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin#usage\"\n        },\n        \"typescript-eslint-rules\"\n      ],\n      \" 查询规则的使用。\"\n    ],\n    [\n      \"h2\",\n      \"stylelint\"\n    ],\n    [\n      \"p\",\n      \"stylelint 用来检测样式代码的风格，在根目录下新建配置文件 \",\n      [\n        \"code\",\n        \".stylelintrc.js\"\n      ],\n      \" 即可引入 lint 规则：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> fabric <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"@umijs/fabric\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> yourRules <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// your rules</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token operator\\\">...</span>fabric<span class=\\\"token punctuation\\\">.</span>stylelint<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token operator\\\">...</span>yourRules\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const fabric = require(\\\"@umijs/fabric\\\");\\n\\nconst yourRules = {\\n  rules: {\\n    // your rules\\n  }\\n};\\n\\nmodule.exports = {\\n  ...fabric.stylelint,\\n  ...yourRules\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"prettierlint\"\n    ],\n    [\n      \"p\",\n      \"prettierlint 用来检测代码格式化标准，在根目录下新建配置文件 \",\n      [\n        \"code\",\n        \".prettierrc.js\"\n      ],\n      \" 即可引入 lint 规则：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> fabric <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"@umijs/fabric\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> yourRules <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// your rules</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token operator\\\">...</span>fabric<span class=\\\"token punctuation\\\">.</span>prettier<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token operator\\\">...</span>yourRules\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const fabric = require(\\\"@umijs/fabric\\\");\\n\\nconst yourRules = {\\n  // your rules\\n};\\n\\nmodule.exports = {\\n  ...fabric.prettier,\\n  ...yourRules\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"执行命令行\"\n    ],\n    [\n      \"p\",\n      \"通过 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/dev/orient-project-config#代码检查\"\n        },\n        \"代码检查\"\n      ],\n      \" 和 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/dev/orient-project-config#代码修复\"\n        },\n        \"代码修复\"\n      ],\n      \" 可用于执行 lint 任务。\"\n    ],\n    [\n      \"h2\",\n      \"流程保证\"\n    ],\n    [\n      \"p\",\n      \"为了保证以上检测能力的有效执行，蚩尤内部通过在执行 git 命令时（Git hooks）强制运行检测任务来保证，这里使用了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/typicode/husky\"\n        },\n        \"husky\"\n      ],\n      \" 和 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/okonet/lint-staged\"\n        },\n        \"lint-staged\"\n      ],\n      \" 这些工具。\"\n    ],\n    [\n      \"h4\",\n      \"实现过程\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"待提交的代码\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"git add 添加到暂存区\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"执行 git commit\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"husky 注册在 git pre-commit 的钩子调用 lint-staged\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"lint-staged 取得所有被提交的文件依次执行写好的 lint 任务\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如果有错误（没通过 lint 检查）则停止任务，等待下次 commit，同时打印错误信息\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"成功提交至 git remote\"\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"开发\",\n    \"order\": 3,\n    \"title\": \"代码质量保障\",\n    \"filename\": \"docs/dev/orient-code-quality-assurance.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#引入配置文件\",\n          \"title\": \"引入配置文件\"\n        },\n        \"引入配置文件\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#eslint\",\n          \"title\": \"eslint\"\n        },\n        \"eslint\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#tslint\",\n          \"title\": \"tslint\"\n        },\n        \"tslint\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#stylelint\",\n          \"title\": \"stylelint\"\n        },\n        \"stylelint\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#prettierlint\",\n          \"title\": \"prettierlint\"\n        },\n        \"prettierlint\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#执行命令行\",\n          \"title\": \"执行命令行\"\n        },\n        \"执行命令行\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#流程保证\",\n          \"title\": \"流程保证\"\n        },\n        \"流程保证\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}