{"version":3,"sources":["webpack:///./docs/dev/orient-assert.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvfile":"docs/dev/orient-assert.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"为提高项目的开发效率，蚩尤提供了一批高质量的\",\n      [\n        \"code\",\n        \"React\"\n      ],\n      \"资源，这些资源包括组件、模板、区块。\"\n    ],\n    [\n      \"h2\",\n      \"组件\"\n    ],\n    [\n      \"h2\",\n      \"基础组件\"\n    ],\n    [\n      \"p\",\n      \"蚩尤使用了 \",\n      [\n        \"code\",\n        \"Ant Design\"\n      ],\n      \" 的开源组件库，并在其上层做了一层封装，它并没有对 \",\n      [\n        \"code\",\n        \"Ant Design\"\n      ],\n      \" 进行二次开发，考虑到 \",\n      [\n        \"code\",\n        \"Ant Design\"\n      ],\n      \" 每个月都会定量发布新的特性支持，而且不同的版本（目前最新为 V4）在 API 的使用上存在非常大的差异，同时为了兼容已使用并计划使用它但又不需要考虑版本的用户群体，因此最终我们决定只在其上层进行一层封装以满足企业内部的品牌需求（Orient Design），假设你之前的中后台平台就是基于它来建设的，只需要非常简单的方式就可以接入蚩尤。\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"Orient Design\"\n      ],\n      \"是东方证券内部 UED 团队经过无数中后台系统需求所历练出来的一套设计语言规范，它更加适合金融场景下的业务需求。而蚩尤团队和 UED 团队则一起合作打造出一套符合 \",\n      [\n        \"code\",\n        \"Orient Design\"\n      ],\n      \" 设计语言规范的基础组件库以满足各种业务场景的需要，具体可跳至 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/button\"\n        },\n        \"传送门:基础组件\"\n      ],\n      \" 了解详细使用。\"\n    ],\n    [\n      \"h2\",\n      \"业务组件\"\n    ],\n    [\n      \"p\",\n      \"除了基础组件，我们针对不同业务场景封装了很多 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"\"\n        },\n        \"TODO 传送门:业务组件\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"模板\"\n    ],\n    [\n      \"div\",\n      {\n        \"style\": \"text-align: center; margin: 40px 0px;\"\n      },\n      [\n        \"img\",\n        {\n          \"width\": \"100%\",\n          \"src\": \"https://s2.ax1x.com/2020/01/23/1VpcU1.png\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"模板，即一个页面。\"\n    ],\n    [\n      \"p\",\n      \"针对不同的业务场景蚩尤不仅可以使用官方社区模板，目前支持两大官方社区，分别是 antd 和 umi，同时它也支持私有模板的自定义定制，这些模板能帮助开发者降低很多开发成本。\"\n    ],\n    [\n      \"p\",\n      \"模板创建方式，有两种方式：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"通过 umi ui 可视化方式创建（推荐）\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"通过命令行方式创建，如下选择 app 类型\"\n        ]\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"sh\",\n        \"highlighted\": \"$ yarn create umi  # <span class=\\\"token operator\\\">or</span> npm create umi\\n\\n# Choose ant<span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">-</span>pro<span class=\\\"token punctuation\\\">:</span>\\n <span class=\\\"token keyword\\\">Select</span> the boilerplate type <span class=\\\"token punctuation\\\">(</span>Use arrow keys<span class=\\\"token punctuation\\\">)</span>\\n❯ ant<span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">-</span>pro  <span class=\\\"token operator\\\">-</span> Create project <span class=\\\"token keyword\\\">with</span> an layout<span class=\\\"token operator\\\">-</span>only ant<span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">-</span>pro boilerplate<span class=\\\"token punctuation\\\">,</span> use together <span class=\\\"token keyword\\\">with</span> umi block<span class=\\\"token punctuation\\\">.</span>\\n  app             <span class=\\\"token operator\\\">-</span> Create project <span class=\\\"token keyword\\\">with</span> a simple boilerplate<span class=\\\"token punctuation\\\">,</span> support typescript<span class=\\\"token punctuation\\\">.</span>\\n  block           <span class=\\\"token operator\\\">-</span> Create a umi block<span class=\\\"token punctuation\\\">.</span>\\n  library         <span class=\\\"token operator\\\">-</span> Create a library <span class=\\\"token keyword\\\">with</span> umi<span class=\\\"token punctuation\\\">.</span>\\n  plugin          <span class=\\\"token operator\\\">-</span> Create a umi plugin<span class=\\\"token punctuation\\\">.</span>\"\n      },\n      [\n        \"code\",\n        \"$ yarn create umi  # or npm create umi\\n\\n# Choose ant-design-pro:\\n Select the boilerplate type (Use arrow keys)\\n❯ ant-design-pro  - Create project with an layout-only ant-design-pro boilerplate, use together with umi block.\\n  app             - Create project with a simple boilerplate, support typescript.\\n  block           - Create a umi block.\\n  library         - Create a library with umi.\\n  plugin          - Create a umi plugin.\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"区块\"\n    ],\n    [\n      \"div\",\n      {\n        \"style\": \"text-align: center; margin: 40px 0px;\"\n      },\n      [\n        \"img\",\n        {\n          \"width\": \"100%\",\n          \"src\": \"https://s2.ax1x.com/2020/01/23/1VCst1.png\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"区块，即一个页面中的一部分，它通常是多个基础/业务组件的组合。\"\n    ],\n    [\n      \"p\",\n      \"区块是一些可复用的代码片段，开发者可以快速地把某个区块代码添加到模板的指定位置中，然后再做改动和二次加工，蚩尤针对战线形态的差异抽象了大量的区块，它同样来自两大社区，同样它也支持自定义。\"\n    ],\n    [\n      \"p\",\n      \"将 区块 添加到项目里面同样也有两种方式：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"通过 umi ui 可视化方式创建（推荐）\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"通过命令行方式创建，如下选择 block 类型\"\n        ]\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"sh\",\n        \"highlighted\": \"$ yarn create umi  # <span class=\\\"token operator\\\">or</span> npm create umi\\n\\n# Choose ant<span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">-</span>pro<span class=\\\"token punctuation\\\">:</span>\\n <span class=\\\"token keyword\\\">Select</span> the boilerplate type <span class=\\\"token punctuation\\\">(</span>Use arrow keys<span class=\\\"token punctuation\\\">)</span>\\n❯ ant<span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">-</span>pro  <span class=\\\"token operator\\\">-</span> Create project <span class=\\\"token keyword\\\">with</span> an layout<span class=\\\"token operator\\\">-</span>only ant<span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">-</span>pro boilerplate<span class=\\\"token punctuation\\\">,</span> use together <span class=\\\"token keyword\\\">with</span> umi block<span class=\\\"token punctuation\\\">.</span>\\n  app             <span class=\\\"token operator\\\">-</span> Create project <span class=\\\"token keyword\\\">with</span> a simple boilerplate<span class=\\\"token punctuation\\\">,</span> support typescript<span class=\\\"token punctuation\\\">.</span>\\n  block           <span class=\\\"token operator\\\">-</span> Create a umi block<span class=\\\"token punctuation\\\">.</span>\\n  library         <span class=\\\"token operator\\\">-</span> Create a library <span class=\\\"token keyword\\\">with</span> umi<span class=\\\"token punctuation\\\">.</span>\\n  plugin          <span class=\\\"token operator\\\">-</span> Create a umi plugin<span class=\\\"token punctuation\\\">.</span>\"\n      },\n      [\n        \"code\",\n        \"$ yarn create umi  # or npm create umi\\n\\n# Choose ant-design-pro:\\n Select the boilerplate type (Use arrow keys)\\n❯ ant-design-pro  - Create project with an layout-only ant-design-pro boilerplate, use together with umi block.\\n  app             - Create project with a simple boilerplate, support typescript.\\n  block           - Create a umi block.\\n  library         - Create a library with umi.\\n  plugin          - Create a umi plugin.\"\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"开发\",\n    \"order\": 1,\n    \"title\": \"资源使用\",\n    \"filename\": \"docs/dev/orient-assert.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#组件\",\n          \"title\": \"组件\"\n        },\n        \"组件\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#基础组件\",\n          \"title\": \"基础组件\"\n        },\n        \"基础组件\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#业务组件\",\n          \"title\": \"业务组件\"\n        },\n        \"业务组件\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#模板\",\n          \"title\": \"模板\"\n        },\n        \"模板\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#区块\",\n          \"title\": \"区块\"\n        },\n        \"区块\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}