{"version":3,"sources":["webpack:///./docs/dev/orient-local-proxy.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oUAAoU,iUAAiU,oQAAoQ,iWAAiW,sSAAsS,gIAAgI,iQAAiQ;AACj5D,OAAO;AACP;AACA;AACA,4CAA4C,iDAAiD,wBAAwB,oCAAoC,yDAAyD,KAAK,mBAAmB;AAC1O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,0IAA0I,qZAAqZ,2KAA2K,wFAAwF,sFAAsF;AACn+B,OAAO;AACP;AACA;AACA,iBAAiB,oBAAoB,sFAAsF,iBAAiB,MAAM,IAAI;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+YAA+Y,iXAAiX,iXAAiX,2RAA2R,mGAAmG;AAC/+C,OAAO;AACP;AACA;AACA,4EAA4E,sDAAsD,sDAAsD,kDAAkD,iBAAiB;AAC3P;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0JAA0J,gcAAgc,0CAA0C,yFAAyF,yIAAyI,uIAAuI,uIAAuI,kKAAkK,8IAA8I,qcAAqc,+KAA+K,gDAAgD,8CAA8C,4CAA4C,0CAA0C;AAC5sE,OAAO;AACP;AACA;AACA,8BAA8B,+FAA+F,WAAW,sBAAsB,eAAe,oBAAoB,uBAAuB,wBAAwB,wFAAwF,qBAAqB,OAAO,KAAK,IAAI;AAC7W;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uIAAuI,4nBAA4nB,4CAA4C;AAC12B,OAAO;AACP;AACA;AACA,UAAU,kBAAkB,iLAAiL,GAAG;AAChN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,E","file":"docs/dev/orient-local-proxy.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"h2\",\n      \"为什么要本地代理\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"为代码维护性考虑：通常前端请求后端接口时写的都是相对路径，如 \",\n          [\n            \"code\",\n            \"/api/getFoo.json\"\n          ],\n          \"，此时如果我们本地通过访问 \",\n          [\n            \"code\",\n            \"http://127.0.0.1:4444\"\n          ],\n          \" 来调试页面，所有相对路径的 API 最终都会变成 \",\n          [\n            \"code\",\n            \"http://127.0.0.1:4444/api/getFoo.json\"\n          ],\n          \"，由于前端调试服务并没有提供这些接口，自然这些请求就会以 404 而结束，此时我们需要将这些请求代理到真正的服务地址；\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"为解决服务端跨域策略；\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"为解决独立模块之间的依赖关系：假设 A 模块在使用前需要依赖 B 模块，而我们的 A 和 B 又是独立维护独立代码仓库，而我们在开发 A 模块的时候必然还要启动 B 模块，假设 B 模块你一点也不清楚其内部实现，此时我们就可以通过本地代理将请求 B 模块的请求代理到已经部署好的测试环境上。\"\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"需要明确的问题\"\n    ],\n    [\n      \"p\",\n      \"所谓代理功能，是为了调试使用的，只能在本地开发时生效，构建或者发布之后无法使用。\"\n    ],\n    [\n      \"h2\",\n      \"实现原理\"\n    ],\n    [\n      \"p\",\n      \"现在市面上所有的脚手架都提供了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://webpack.js.org/configuration/dev-server/#devserverproxy\"\n        },\n        \"proxy\"\n      ],\n      \" 的能力，底层几乎都是基于 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/chimurai/http-proxy-middleware\"\n        },\n        \"http-proxy-middleware\"\n      ],\n      \" 来实现，它可以将所有符合正则匹配的请求转发到某个地址上，下面是一个简单的示例：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">var</span> express <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"express\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> proxy <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"http-proxy-middleware\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> app <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">express</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token string\\\">\\\"/api\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function\\\">proxy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> target<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"http://www.example.org\\\"</span><span class=\\\"token punctuation\\\">,</span> changeOrigin<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// http://localhost:3000/api/foo/bar -> http://www.example.org/api/foo/bar</span>\"\n      },\n      [\n        \"code\",\n        \"var express = require(\\\"express\\\");\\nvar proxy = require(\\\"http-proxy-middleware\\\");\\n\\nvar app = express();\\n\\napp.use(\\n  \\\"/api\\\",\\n  proxy({ target: \\\"http://www.example.org\\\", changeOrigin: true })\\n);\\napp.listen(3000);\\n\\n// http://localhost:3000/api/foo/bar -> http://www.example.org/api/foo/bar\"\n      ]\n    ],\n    [\n      \"p\",\n      \"这个配置可以将所有 \",\n      [\n        \"code\",\n        \"/api\"\n      ],\n      \" 开头的请求转到到 \",\n      [\n        \"code\",\n        \"http://www.example.org/\"\n      ],\n      \" ,并且附带所有的参数，包括头信息和 cookie。有一点需要注意的是，在浏览器控制台里看到的仍然是 \",\n      [\n        \"code\",\n        \"http://localhost:3000/api/xxx\"\n      ],\n      \",转化的步骤是在 node.js 中完成的。\"\n    ],\n    [\n      \"h2\",\n      \"在开发中使用\"\n    ],\n    [\n      \"p\",\n      \"框架内使用 proxy 非常简单，只需要在 \",\n      [\n        \"code\",\n        \"config/config.ts\"\n      ],\n      \" 中配置即可，配置如下：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"proxy<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">'/server/api'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    target<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'https://api.dfzq.com.cn/'</span><span class=\\\"token punctuation\\\">,</span>\\n    changeOrigin<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    pathRewrite<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'^/server'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\"\n      },\n      [\n        \"code\",\n        \"proxy: {\\n  '/server/api': {\\n    target: 'https://api.dfzq.com.cn/',\\n    changeOrigin: true,\\n    pathRewrite: { '^/server': '' },\\n  },\\n},\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后访问 \",\n      [\n        \"code\",\n        \"/server/api\"\n      ],\n      \" 能访问到 \",\n      [\n        \"code\",\n        \"https://api.dfzq.com.cn/api\"\n      ],\n      \" 的数据。详细的配置建议直接查看 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://webpack.js.org/configuration/dev-server/#devserverproxy\"\n        },\n        \"webpack-dev\"\n      ],\n      \" 的配置。\"\n    ],\n    [\n      \"h2\",\n      \"CORS\"\n    ],\n    [\n      \"p\",\n      \"如果觉得以上改动需要配置比较麻烦，系统又比较简单，无需引入新的复杂度。我们可以使用 CORS 的方式来允许跨域调用，在 express 中可以这么设置：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">header</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Access-Control-Allow-Origin\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"你的项目地址，用*将会带来安全问题\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nres<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">header</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Access-Control-Allow-Headers\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"*\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nres<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">header</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Access-Control-Allow-Methods\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"*\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nres<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">header</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Content-Type\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"application/json;charset=utf-8\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"res.header(\\\"Access-Control-Allow-Origin\\\", \\\"你的项目地址，用*将会带来安全问题\\\");\\nres.header(\\\"Access-Control-Allow-Headers\\\", \\\"*\\\");\\nres.header(\\\"Access-Control-Allow-Methods\\\", \\\"*\\\");\\nres.header(\\\"Content-Type\\\", \\\"application/json;charset=utf-8\\\");\"\n      ]\n    ],\n    [\n      \"p\",\n      \"在别的语言中方法也大同小异，最重要的是 \",\n      [\n        \"code\",\n        \"Access-Control-Allow-Origin Access-Control-Allow-Headers Access-Control-Allow-Methods\"\n      ],\n      \" 头的相应设置。\"\n    ],\n    [\n      \"p\",\n      \"在这里强烈建议每个人通读一下 MDN 的 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS\"\n        },\n        \"HTTP 访问控制\"\n      ],\n      \"，这篇图文并茂的文章可以解决跨域百分之八十的疑惑。\"\n    ],\n    [\n      \"h2\",\n      \"Profile 高级用法\"\n    ],\n    [\n      \"p\",\n      \"在开发中我们可能需要区分多种情况，比如开发环境，测试环境，语法环境，在框架中我们可以通过环境变量来实现这个需求。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> serveUrlMap <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  dev<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"https://dev.api/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  sit<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"https://sit.api/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  test<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"https://test.api/\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> SERVE_ENV <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"dev\\\"</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ....</span>\\n  proxy<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">\\\"/server/api\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      target<span class=\\\"token punctuation\\\">:</span> serveUrlMap<span class=\\\"token punctuation\\\">[</span>SERVE_ENV<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      changeOrigin<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      pathRewrite<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">\\\"^/server\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"\\\"</span> <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const serveUrlMap = {\\n  dev: \\\"https://dev.api/\\\",\\n  sit: \\\"https://sit.api/\\\",\\n  test: \\\"https://test.api/\\\"\\n};\\n\\nconst { SERVE_ENV = \\\"dev\\\" } = process.env;\\n\\nexport default {\\n  // ....\\n  proxy: {\\n    \\\"/server/api\\\": {\\n      target: serveUrlMap[SERVE_ENV],\\n      changeOrigin: true,\\n      pathRewrite: { \\\"^/server\\\": \\\"\\\" }\\n    }\\n  }\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"我们只要在 \",\n      [\n        \"code\",\n        \"package.json\"\n      ],\n      \" 中使用 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/kentcdodds/cross-env\"\n        },\n        \"cross-env\"\n      ],\n      \" 配置好各种快捷命令，就可以做到快速切换。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"json\",\n        \"highlighted\": \"<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"start:dev\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"cross-env SERVE_ENV=dev umi dev\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"start:sit\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"cross-env SERVE_ENV=sit umi dev\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"start:test\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"cross-env SERVE_ENV=test umi dev\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n      },\n      [\n        \"code\",\n        \"{\\n  \\\"scripts\\\": {\\n    \\\"start:dev\\\": \\\"cross-env SERVE_ENV=dev umi dev\\\",\\n    \\\"start:sit\\\": \\\"cross-env SERVE_ENV=sit umi dev\\\",\\n    \\\"start:test\\\": \\\"cross-env SERVE_ENV=test umi dev\\\"\\n  }\\n}\"\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"开发\",\n    \"order\": 10,\n    \"title\": \"本地 Proxy 方案\",\n    \"filename\": \"docs/dev/orient-local-proxy.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#为什么要本地代理\",\n          \"title\": \"为什么要本地代理\"\n        },\n        \"为什么要本地代理\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#需要明确的问题\",\n          \"title\": \"需要明确的问题\"\n        },\n        \"需要明确的问题\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#实现原理\",\n          \"title\": \"实现原理\"\n        },\n        \"实现原理\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#在开发中使用\",\n          \"title\": \"在开发中使用\"\n        },\n        \"在开发中使用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#CORS\",\n          \"title\": \"CORS\"\n        },\n        \"CORS\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Profile-高级用法\",\n          \"title\": \"Profile 高级用法\"\n        },\n        \"Profile 高级用法\"\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}