{"version":3,"sources":["webpack:///./docs/framework/orient-isomorphism-master-app.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mOAAmO,kNAAkN,qcAAqc,6SAA6S,2KAA2K,0dAA0d,sOAAsO,89BAA89B,gGAAgG,2PAA2P,+eAA+e,0MAA0M,8iBAA8iB,uPAAuP,0CAA0C;AACn1J,OAAO;AACP;AACA;AACA,+CAA+C,8BAA8B,8FAA8F,iEAAiE,gCAAgC,qEAAqE,kDAAkD,+QAA+Q,cAAc,mDAAmD,8GAA8G,2CAA2C,4HAA4H,2BAA2B;AACngC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yRAAyR,urBAAurB,oNAAoN,g8BAAg8B,0FAA0F,+OAA+O,qdAAqd,8LAA8L,unBAAunB,0QAA0Q,qOAAqO,gDAAgD,8CAA8C,4CAA4C,8HAA8H;AAC96I,OAAO;AACP;AACA;AACA,iEAAiE,4FAA4F,gCAAgC,iPAAiP,QAAQ,uCAAuC,oFAAoF,+BAA+B,mHAAmH,mDAAmD,2BAA2B,OAAO,KAAK,GAAG,GAAG;AACnyeAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"docs/framework/orient-isomorphism-master-app.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"section\",\n    [\n      \"p\",\n      \"蚩尤（CHIYOU）已为开发者在框架应用层面解决了很多问题，如路由配置如何与菜单关联并展示，面包屑组件的集成等。所以开发者在这里更关心如何在框架应用上注册子应用。\"\n    ],\n    [\n      \"h2\",\n      \"在框架应用中注册子应用\"\n    ],\n    [\n      \"p\",\n      \"蚩尤（CHIYOU）提供了两种方式来提供注册，其中运行时配置更适合从服务端读取子应用信息来进行配置。\"\n    ],\n    [\n      \"h2\",\n      \"编译时配置\"\n    ],\n    [\n      \"p\",\n      \"这种配置方式比较适合纯静态的简单项目，所有的配置都是在配置文件中定死的，如果你想动态化请参考 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#运行时配置\"\n        },\n        \"运行时配置\"\n      ],\n      \"，具体配置方式如下：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// config/config.ts:</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n  routes<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"../layouts/BasicLayout\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      routes<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n          name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"app1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n          path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/app1\\\"</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n      <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token string\\\">\\\"chiyou-boot\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 注册子应用信息</span>\\n        apps<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"app1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 唯一 id</span>\\n            entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"//localhost:7001\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> HTML Entry\\n            base<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/app1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 路由前缀，通过这个前缀判断是否要启动该子应用，通常与框架应用中已配置的路由相匹配，即 routes 中的路由</span>\\n            history<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"browser\\\"</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 子应用的 history 配置，默认和当前框架应用 history 配置一致</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"app2\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n              <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// TODO 即将支持 Config Entry</span>\\n              scripts<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              styles<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            base<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/app2\\\"</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        jsSandbox<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 是否启用 js 沙箱，默认为 false</span>\\n        prefetch<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 是否启用 prefetch 特性，默认为 true</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// config/config.ts:\\nexport default {\\n  // ...\\n  routes: [\\n    {\\n      path: \\\"/\\\",\\n      component: \\\"../layouts/BasicLayout\\\",\\n      routes: [\\n        {\\n          name: \\\"app1\\\",\\n          path: \\\"/app1\\\"\\n        }\\n        // ...\\n      ]\\n    }\\n  ],\\n  plugins: [\\n    [\\n      \\\"chiyou-boot\\\",\\n      (master: {\\n        // 注册子应用信息\\n        apps: [\\n          {\\n            name: \\\"app1\\\", // 唯一 id\\n            entry: \\\"//localhost:7001\\\", // HTML Entry\\n            base: \\\"/app1\\\", // 路由前缀，通过这个前缀判断是否要启动该子应用，通常与框架应用中已配置的路由相匹配，即 routes 中的路由\\n            history: \\\"browser\\\" // 子应用的 history 配置，默认和当前框架应用 history 配置一致\\n          },\\n          {\\n            name: \\\"app2\\\",\\n            entry: {\\n              // TODO 即将支持 Config Entry\\n              scripts: [],\\n              styles: []\\n            },\\n            base: \\\"/app2\\\"\\n          }\\n        ],\\n        jsSandbox: true, // 是否启用 js 沙箱，默认为 false\\n        prefetch: true // 是否启用 prefetch 特性，默认为 true\\n      })\\n    ]\\n  ]\\n  // ...\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"运行时配置\"\n    ],\n    [\n      \"p\",\n      \"这种配置更适合通过数据驱动来注册子应用，它和编译时配置的性能是一致的，具体配置如下：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"javascript\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// src/app.ts:</span>\\n<span class=\\\"token keyword\\\">import</span> request <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./utils/request\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// chiyou值是一个 promise</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> chiyou <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">request</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"/config\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>serverMenus <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 注册子应用信息</span>\\n  apps<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"app1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 唯一 id</span>\\n      entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"//localhost:7001\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> HTML Entry\\n      base<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/app1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 路由前缀，通过这个前缀判断是否要启动该子应用，通常与框架应用中已配置的路由相匹配，即 routes 中的路由</span>\\n      history<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"browser\\\"</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 子应用的 history 配置，默认和当前框架应用 history 配置一致</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"app2\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// TODO 支持 Config Entry</span>\\n        scripts<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        styles<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      base<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"/app2\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  jsSandbox<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 是否启用 js 沙箱，默认为 false</span>\\n  prefetch<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 是否启用 prefetch 特性，默认为 true</span>\\n  lifeCycles<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 更多使用请查看 API 说明</span>\\n    afterMount<span class=\\\"token punctuation\\\">:</span> props <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// src/app.ts:\\nimport request from \\\"./utils/request\\\";\\n\\n// chiyou值是一个 promise\\nexport const chiyou = request(\\\"/config\\\").then(serverMenus => ({\\n  // 注册子应用信息\\n  apps: [\\n    {\\n      name: \\\"app1\\\", // 唯一 id\\n      entry: \\\"//localhost:7001\\\", // HTML Entry\\n      base: \\\"/app1\\\", // 路由前缀，通过这个前缀判断是否要启动该子应用，通常与框架应用中已配置的路由相匹配，即 routes 中的路由\\n      history: \\\"browser\\\" // 子应用的 history 配置，默认和当前框架应用 history 配置一致\\n    },\\n    {\\n      name: \\\"app2\\\",\\n      entry: {\\n        // TODO 支持 Config Entry\\n        scripts: [],\\n        styles: []\\n      },\\n      base: \\\"/app2\\\"\\n    }\\n  ],\\n  jsSandbox: true, // 是否启用 js 沙箱，默认为 false\\n  prefetch: true, // 是否启用 prefetch 特性，默认为 true\\n  lifeCycles: {\\n    // 更多使用请查看 API 说明\\n    afterMount: props => {\\n      console.log(props);\\n    }\\n  }\\n}));\"\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"指南\",\n    \"order\": 4,\n    \"title\": \"框架应用开发\",\n    \"filename\": \"docs/framework/orient-isomorphism-master-app.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#在框架应用中注册子应用\",\n          \"title\": \"在框架应用中注册子应用\"\n        },\n        \"在框架应用中注册子应用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#编译时配置\",\n          \"title\": \"编译时配置\"\n        },\n        \"编译时配置\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#运行时配置\",\n          \"title\": \"运行时配置\"\n        },\n        \"运行时配置\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#API-说明\",\n          \"title\": \"API 说明\"\n        },\n        \"API 说明\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#注意事项\",\n          \"title\": \"注意事项\"\n        },\n        \"注意事项\"\n      ]\n    ]\n  ],\n  \"api\": [\n    \"section\",\n    [\n      \"h2\",\n      \"API 说明\"\n    ],\n    [\n      \"h3\",\n      \"配置列表\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"配置\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"是否必填\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"apps\"\n          ],\n          [\n            \"td\",\n            \"配置子应用的一些注册信息\"\n          ],\n          [\n            \"td\",\n            \"App[]\"\n          ],\n          [\n            \"td\",\n            \"是\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"jsSandbox\"\n          ],\n          [\n            \"td\",\n            \"是否启用 js 沙箱\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"否\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"prefetch\"\n          ],\n          [\n            \"td\",\n            \"是否启用 prefetch 特性\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"否\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"lifeCycles\"\n          ],\n          [\n            \"td\",\n            \"全局的子应用生命周期钩子事件\"\n          ],\n          [\n            \"td\",\n            \"object\"\n          ],\n          [\n            \"td\",\n            \"否\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"App\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"配置\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"是否必填\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"name\"\n          ],\n          [\n            \"td\",\n            \"子应用唯一 id，子应用之间必须确保\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"是\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"entry\"\n          ],\n          [\n            \"td\",\n            \"子应用 html 地址\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" { script: string[], styles: [] }\"\n          ],\n          [\n            \"td\",\n            \"是\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"base\"\n          ],\n          [\n            \"td\",\n            \"子应用路由前缀，通常跟子应用的 \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://umijs.org/config/#base\"\n              },\n              \"base 配置\"\n            ],\n            \" 一致，框架会以这个配置作为前缀判断是否激活当前应用，支持配置一组前缀\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" string[]\"\n          ],\n          [\n            \"td\",\n            \"是\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"history\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://umijs.org/config/#history\"\n              },\n              \"umi history mode\"\n            ]\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"否\"\n          ],\n          [\n            \"td\",\n            \"框架应用 history 配置\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"mountElementId\"\n          ],\n          [\n            \"td\",\n            \"子应用挂载到框架应用的哪个 id 节点上（注意不要跟子应用的 mountElementId 一致）\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"否\"\n          ],\n          [\n            \"td\",\n            \"root-subapp\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"props\"\n          ],\n          [\n            \"td\",\n            \"主应用传递给子应用的数据\"\n          ],\n          [\n            \"td\",\n            \"object\"\n          ],\n          [\n            \"td\",\n            \"否\"\n          ],\n          [\n            \"td\",\n            \"{}\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"LifeCycles\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"beforeLoad - \",\n          [\n            \"code\",\n            \"(props) => {}\"\n          ],\n          \" 加载前触发\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"beforeMount - \",\n          [\n            \"code\",\n            \"(props) => {}\"\n          ],\n          \" 挂载前触发\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"afterMount - \",\n          [\n            \"code\",\n            \"(props) => {}\"\n          ],\n          \" 挂载后触发\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"beforeUnmount - \",\n          [\n            \"code\",\n            \"(props) => {}\"\n          ],\n          \" 卸载前触发\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"afterUnmount - \",\n          [\n            \"code\",\n            \"(props) => {}\"\n          ],\n          \" 卸载后触发\"\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"注意事项\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"当框架应用与子应用的 history 模式一致时（比如都为 browser 或 hash），框架会自动创建一些空路由来避免 404，所以建议框架应用与子应用使用相同的 history mode，否则需要自己来处理这些情况\"\n        ]\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}