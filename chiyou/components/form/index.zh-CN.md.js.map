{"version":3,"sources":["webpack:///./components/form/index.zh-CN.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2SAA2S,0CAA0C,yOAAyO,0CAA0C,sLAAsL;AAC9xB,OAAO;AACP;AACA;AACA,wDAAwD,mCAAmC,kBAAkB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,0BAA0B,QAAQ,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2SAA2S,qFAAqF,ofAAof,mGAAmG,mNAAmN,sVAAsV;AAChgD,OAAO;AACP;AACA;AACA,uDAAuD,MAAM,oFAAoF,qCAAqC,2BAA2B;AACjeAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,6FAA6F,0DAA0D,4CAA4C,2KAA2K,qWAAqW,+GAA+G,oFAAoF,2mBAA2mB,+GAA+G,oFAAoF,6pBAA6pB,+GAA+G,oFAAoF;AAC1oF,OAAO;AACP;AACA;AACA,gBAAgB,WAAW,iBAAiB,GAAG,cAAc,sCAAsC,aAAa,EAAE,gEAAgE,aAAa,EAAE,yEAAyE,aAAa,EAAE;AACzeAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,yIAAyI,2LAA2L,qZAAqZ,8FAA8F,mLAAmL,2LAA2L,qZAAqZ,8FAA8F,4CAA4C;AACnwD,WAAW;AACX;AACA;AACA,cAAc,mBAAmB,4BAA4B,iGAAiG,YAAY,oBAAoB,4BAA4B,iGAAiG,YAAY,GAAG;AAC1U;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,8ZAA8Z;AAC7d,WAAW;AACX;AACA;AACA,cAAc,iEAAieAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACfgBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACfeAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,qGAAqG,iBAAiB,qBAAqB,6GAA6G,+DAA+D,2GAA2G,mHAAmH,UAAU,sHAAsH,2GAA2G,oNAAoN,kLAAkL,sGAAsG,oNAAoN,yLAAyL;AAChqD,OAAO;AACP;AACA;AACA,iBAAiB,OAAO,eAAe,UAAU,qBAAqB,uBAAuB,wDAAwD,gBAAgB,iBAAiB,GAAG,gEAAgE,aAAa,4CAA4C,aAAa,YAAY;AAC3U;AACA;AACA;AACA;AACA,iFAAiF,qBAAqB,GAAG,+CAA+C,wBAAwB,0BAA0B,GAAG;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kXAAkX,yTAAyT,4CAA4C,0aAA0a,uFAAuF,2TAA2T,8CAA8C,sNAAsN,qLAAqL,8CAA8C,4CAA4C;AACtiE,OAAO;AACP;AACA;AACA,4CAA4C,wCAAwC,GAAG,kDAAkD,SAAS,0CAA0C,KAAK,cAAc,oBAAoB,KAAK,GAAG;AAC3O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,2EAA2E,sGAAsG,gEAAgE,qBAAqB,mHAAmH,kJAAkJ,+MAA+M,0DAA0D,yKAAyK,sWAAsW,mBAAmB,uIAAuI,qNAAqN,YAAY,+FAA+F,kMAAkM,0RAA0R;AACzyE,OAAO;AACP;AACA;AACA,wBAAwB,kCAAkC,gBAAgB,gBAAgB,qBAAqB,6BAA6B,qEAAqE,iBAAiB,WAAW,uCAAuC,mBAAmB,GAAG,iCAAiC,KAAK,IAAI,4DAA4D;AAChZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yRAAyR,2IAA2I,wLAAwL,qGAAqG,6EAA6E,upBAAupB,mEAAmE,QAAQ,qLAAqL,UAAU,mDAAmD;AACluD,OAAO;AACP;AACA;AACA,iCAAiC,qCAAqC,mDAAmD,iEAAiE,6BAA6B,QAAQ,cAAc,IAAI;AACjP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"components/form/index.zh-CN.md.js","sourcesContent":["module.exports = {\n  \"content\": [\n    \"section\",\n    [\n      \"p\",\n      \"由输入框、各种选择器、单/多选等组件组合成等综合表单。\"\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"Components\",\n    \"subtitle\": \"表单\",\n    \"type\": \"数据录入\",\n    \"cols\": 1,\n    \"title\": \"Form\",\n    \"filename\": \"components/form/index.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#API\",\n          \"title\": \"API\"\n        },\n        \"API\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#在-TypeScript-中使用\",\n          \"title\": \"在 TypeScript 中使用\"\n        },\n        \"在 TypeScript 中使用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#FAQ\",\n          \"title\": \"FAQ\"\n        },\n        \"FAQ\"\n      ]\n    ]\n  ],\n  \"api\": [\n    \"section\",\n    [\n      \"h2\",\n      \"API\"\n    ],\n    [\n      \"h3\",\n      \"Form\"\n    ],\n    [\n      \"p\",\n      [\n        \"strong\",\n        \"更多示例参考 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"http://react-component.github.io/form/\"\n          },\n          \"rc-form\"\n        ]\n      ],\n      \"。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"form\"\n          ],\n          [\n            \"td\",\n            \"经 \",\n            [\n              \"code\",\n              \"Form.create()\"\n            ],\n            \" 包装过的组件会自带 \",\n            [\n              \"code\",\n              \"this.props.form\"\n            ],\n            \" 属性\"\n          ],\n          [\n            \"td\",\n            \"object\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"hideRequiredMark\"\n          ],\n          [\n            \"td\",\n            \"隐藏所有表单项的必选标记\"\n          ],\n          [\n            \"td\",\n            \"Boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelAlign\"\n          ],\n          [\n            \"td\",\n            \"label 标签的文本对齐方式\"\n          ],\n          [\n            \"td\",\n            \"'left' \",\n            \"|\",\n            \" 'right'\"\n          ],\n          [\n            \"td\",\n            \"'right'\"\n          ],\n          [\n            \"td\",\n            \"3.15.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelCol\"\n          ],\n          [\n            \"td\",\n            \"（3.14.0 新增，之前的版本只能设置到 FormItem 上。）label 标签布局，同 \",\n            [\n              \"code\",\n              \"<Col>\"\n            ],\n            \" 组件，设置 \",\n            [\n              \"code\",\n              \"span\"\n            ],\n            \" \",\n            [\n              \"code\",\n              \"offset\"\n            ],\n            \" 值，如 \",\n            [\n              \"code\",\n              \"{span: 3, offset: 12}\"\n            ],\n            \" 或 \",\n            [\n              \"code\",\n              \"sm: {span: 3, offset: 12}\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://ant.design/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\",\n            \"3.14.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"layout\"\n          ],\n          [\n            \"td\",\n            \"表单布局\"\n          ],\n          [\n            \"td\",\n            \"'horizontal'\",\n            \"|\",\n            \"'vertical'\",\n            \"|\",\n            \"'inline'\"\n          ],\n          [\n            \"td\",\n            \"'horizontal'\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onSubmit\"\n          ],\n          [\n            \"td\",\n            \"数据验证成功后回调事件\"\n          ],\n          [\n            \"td\",\n            \"Function(e:Event)\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"wrapperCol\"\n          ],\n          [\n            \"td\",\n            \"（3.14.0 新增，之前的版本只能设置到 FormItem 上。）需要为输入控件设置布局样式时，使用该属性，用法同 labelCol\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://ant.design/components/grid-cn/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\",\n            \"3.14.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"colon\"\n          ],\n          [\n            \"td\",\n            \"配置 Form.Item 的 colon 的默认值 (只有在属性 layout 为 horizontal 时有效)\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\",\n            \"3.15.0\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"Form.create(options)\"\n    ],\n    [\n      \"p\",\n      \"使用方式如下：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CustomizedForm</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n\\nCustomizedForm <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>CustomizedForm<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"class CustomizedForm extends React.Component {}\\n\\nCustomizedForm = Form.create({})(CustomizedForm);\"\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"options\"\n      ],\n      \" 的配置项如下。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"mapPropsToFields\"\n          ],\n          [\n            \"td\",\n            \"把父组件的属性映射到表单项上（如：把 Redux store 中的值读出），需要对返回值中的表单域数据用 \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#Form.createFormField\"\n              },\n              [\n                \"code\",\n                \"Form.createFormField\"\n              ]\n            ],\n            \" 标记，注意表单项将变成受控组件, error 等也需要一并手动传入\"\n          ],\n          [\n            \"td\",\n            \"(props) => ({ \",\n            \"[\",\n            \"fieldName\",\n            \"]\",\n            \": FormField { value } })\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"name\"\n          ],\n          [\n            \"td\",\n            \"设置表单域内字段 id 的前缀\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"3.12.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateMessages\"\n          ],\n          [\n            \"td\",\n            \"默认校验信息，可用于把默认错误信息改为中文等，格式与 \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/yiminghe/async-validator/blob/master/src/messages.js\"\n              },\n              \"newMessages\"\n            ],\n            \" 返回值一致\"\n          ],\n          [\n            \"td\",\n            \"Object { \",\n            \"[\",\n            \"nested.path]: String }\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onFieldsChange\"\n          ],\n          [\n            \"td\",\n            \"当 \",\n            [\n              \"code\",\n              \"Form.Item\"\n            ],\n            \" 子节点的值（包括 error）发生改变时触发，可以把对应的值转存到 Redux store\"\n          ],\n          [\n            \"td\",\n            \"Function(props, changedFields, allFields)\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onValuesChange\"\n          ],\n          [\n            \"td\",\n            \"任一表单域的值发生改变时的回调\"\n          ],\n          [\n            \"td\",\n            \"(props, changedValues, allValues) => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"经过 \",\n      [\n        \"code\",\n        \"Form.create\"\n      ],\n      \" 之后如果要拿到 \",\n      [\n        \"code\",\n        \"ref\"\n      ],\n      \"，可以使用 \",\n      [\n        \"code\",\n        \"rc-form\"\n      ],\n      \" 提供的 \",\n      [\n        \"code\",\n        \"wrappedComponentRef\"\n      ],\n      \"，\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140\"\n        },\n        \"详细内容可以查看这里\"\n      ],\n      \"。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CustomizedForm</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// use wrappedComponentRef</span>\\n<span class=\\\"token keyword\\\">const</span> EnhancedForm <span class=\\\"token operator\\\">=</span>  Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>CustomizedForm<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>EnhancedForm</span> <span class=\\\"token attr-name\\\">wrappedComponentRef</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>form<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>form <span class=\\\"token operator\\\">=</span> form<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>form <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// => The instance of CustomizedForm</span>\"\n      },\n      [\n        \"code\",\n        \"class CustomizedForm extends React.Component { ... }\\n\\n// use wrappedComponentRef\\nconst EnhancedForm =  Form.create()(CustomizedForm);\\n<EnhancedForm wrappedComponentRef={(form) => this.form = form} />\\nthis.form // => The instance of CustomizedForm\"\n      ]\n    ],\n    [\n      \"p\",\n      \"经过 \",\n      [\n        \"code\",\n        \"Form.create\"\n      ],\n      \" 包装的组件将会自带 \",\n      [\n        \"code\",\n        \"this.props.form\"\n      ],\n      \" 属性，\",\n      [\n        \"code\",\n        \"this.props.form\"\n      ],\n      \" 提供的 API 如下：\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"注意：使用 \",\n        [\n          \"code\",\n          \"getFieldsValue\"\n        ],\n        \" \",\n        [\n          \"code\",\n          \"getFieldValue\"\n        ],\n        \" \",\n        [\n          \"code\",\n          \"setFieldsValue\"\n        ],\n        \" 等时，应确保对应的 field 已经用 \",\n        [\n          \"code\",\n          \"getFieldDecorator\"\n        ],\n        \" 注册过了。\"\n      ]\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"方法\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldDecorator\"\n          ],\n          [\n            \"td\",\n            \"用于和表单进行双向绑定，详见下方描述\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldError\"\n          ],\n          [\n            \"td\",\n            \"获取某个输入控件的 Error\"\n          ],\n          [\n            \"td\",\n            \"Function(name)\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldsError\"\n          ],\n          [\n            \"td\",\n            \"获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error\"\n          ],\n          [\n            \"td\",\n            \"Function(\",\n            \"[\",\n            \"names: string\",\n            \"[\",\n            \"]])\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldsValue\"\n          ],\n          [\n            \"td\",\n            \"获取一组输入控件的值，如不传入参数，则获取全部组件的值\"\n          ],\n          [\n            \"td\",\n            \"Function(\",\n            \"[\",\n            \"fieldNames: string\",\n            \"[\",\n            \"]])\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldValue\"\n          ],\n          [\n            \"td\",\n            \"获取一个输入控件的值\"\n          ],\n          [\n            \"td\",\n            \"Function(fieldName: string)\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"isFieldsTouched\"\n          ],\n          [\n            \"td\",\n            \"判断是否任一输入控件经历过 \",\n            [\n              \"code\",\n              \"getFieldDecorator\"\n            ],\n            \" 的值收集时机 \",\n            [\n              \"code\",\n              \"options.trigger\"\n            ]\n          ],\n          [\n            \"td\",\n            \"(names?: string\",\n            \"[\",\n            \"]) => boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"isFieldTouched\"\n          ],\n          [\n            \"td\",\n            \"判断一个输入控件是否经历过 \",\n            [\n              \"code\",\n              \"getFieldDecorator\"\n            ],\n            \" 的值收集时机 \",\n            [\n              \"code\",\n              \"options.trigger\"\n            ]\n          ],\n          [\n            \"td\",\n            \"(name: string) => boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"isFieldValidating\"\n          ],\n          [\n            \"td\",\n            \"判断一个输入控件是否在校验状态\"\n          ],\n          [\n            \"td\",\n            \"Function(name)\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"resetFields\"\n          ],\n          [\n            \"td\",\n            \"重置一组输入控件的值（为 \",\n            [\n              \"code\",\n              \"initialValue\"\n            ],\n            \"）与状态，如不传入参数，则重置所有组件\"\n          ],\n          [\n            \"td\",\n            \"Function(\",\n            \"[\",\n            \"names: string\",\n            \"[\",\n            \"]])\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"setFields\"\n          ],\n          [\n            \"td\",\n            \"设置一组输入控件的值与错误状态：\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/react-component/form/blob/3b9959b57ab30b41d8890ff30c79a7e7c383cad3/examples/server-validate.js#L74-L79\"\n              },\n              \"代码\"\n            ]\n          ],\n          [\n            \"td\",\n            \"({\",\n            [\n              \"br\"\n            ],\n            \" \",\n            \" \",\n            \"[\",\n            \"fieldName\",\n            \"]\",\n            \": {value: any, errors: \",\n            \"[\",\n            \"Error\",\n            \"]\",\n            \" }\",\n            [\n              \"br\"\n            ],\n            \"}) => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"setFieldsValue\"\n          ],\n          [\n            \"td\",\n            \"设置一组输入控件的值（注意：不要在 \",\n            [\n              \"code\",\n              \"componentWillReceiveProps\"\n            ],\n            \" 内使用，否则会导致死循环，\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/ant-design/ant-design/issues/2985\"\n              },\n              \"原因\"\n            ],\n            \"）\"\n          ],\n          [\n            \"td\",\n            \"(\",\n            [\n              \"br\"\n            ],\n            \" \",\n            \" \",\n            \"{ \",\n            \"[\",\n            \"fieldName\",\n            \"]\",\n            \":\",\n            \" value },\",\n            [\n              \"br\"\n            ],\n            \" \",\n            \" \",\n            \"callback: Function\",\n            [\n              \"br\"\n            ],\n            \") => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateFields\"\n          ],\n          [\n            \"td\",\n            \"校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件\"\n          ],\n          [\n            \"td\",\n            \"(\",\n            [\n              \"br\"\n            ],\n            \" \",\n            \" \",\n            \"[\",\n            \"fieldNames: string\",\n            \"[\",\n            \"]],\",\n            [\n              \"br\"\n            ],\n            \" \",\n            \" \",\n            \"[\",\n            \"options: object\",\n            \"]\",\n            \",\",\n            [\n              \"br\"\n            ],\n            \" \",\n            \" \",\n            \"callback(errors, values)\",\n            [\n              \"br\"\n            ],\n            \") => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateFieldsAndScroll\"\n          ],\n          [\n            \"td\",\n            \"与 \",\n            [\n              \"code\",\n              \"validateFields\"\n            ],\n            \" 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围\"\n          ],\n          [\n            \"td\",\n            \"参考 \",\n            [\n              \"code\",\n              \"validateFields\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"validateFields/validateFieldsAndScroll\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>\\n  form<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> validateFields <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>errors<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"field1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"field2\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>errors<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"field1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"field2\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> options<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>errors<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const {\\n  form: { validateFields }\\n} = this.props;\\nvalidateFields((errors, values) => {\\n  // ...\\n});\\nvalidateFields([\\\"field1\\\", \\\"field2\\\"], (errors, values) => {\\n  // ...\\n});\\nvalidateFields([\\\"field1\\\", \\\"field2\\\"], options, (errors, values) => {\\n  // ...\\n});\"\n      ]\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.first\"\n          ],\n          [\n            \"td\",\n            \"若为 true，则每一表单域的都会在碰到第一个失败了的校验规则后停止校验\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\",\n            \"3.9.3\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.firstFields\"\n          ],\n          [\n            \"td\",\n            \"指定表单域会在碰到第一个失败了的校验规则后停止校验\"\n          ],\n          [\n            \"td\",\n            \"String\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"3.9.3\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.force\"\n          ],\n          [\n            \"td\",\n            \"对已经校验过的表单域，在 validateTrigger 再次被触发时是否再次校验\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\",\n            \"3.9.3\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.scroll\"\n          ],\n          [\n            \"td\",\n            \"定义 validateFieldsAndScroll 的滚动行为，详细配置见 \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/yiminghe/dom-scroll-into-view#function-parameter\"\n              },\n              \"dom-scroll-into-view config\"\n            ]\n          ],\n          [\n            \"td\",\n            \"Object\"\n          ],\n          [\n            \"td\",\n            \"{}\"\n          ],\n          [\n            \"td\",\n            \"3.9.3\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"validateFields 的 callback 参数示例\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"errors\"\n          ],\n          \":\"\n        ],\n        [\n          \"pre\",\n          {\n            \"lang\": \"js\",\n            \"highlighted\": \"<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">\\\"username\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">\\\"errors\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token string\\\">\\\"message\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Please input your username!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"field\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"username\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"password\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">\\\"errors\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token string\\\">\\\"message\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Please input your Password!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"field\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"password\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n          },\n          [\n            \"code\",\n            \"{\\n  \\\"username\\\": {\\n    \\\"errors\\\": [\\n      {\\n        \\\"message\\\": \\\"Please input your username!\\\",\\n        \\\"field\\\": \\\"username\\\"\\n      }\\n    ]\\n  },\\n  \\\"password\\\": {\\n    \\\"errors\\\": [\\n      {\\n        \\\"message\\\": \\\"Please input your Password!\\\",\\n        \\\"field\\\": \\\"password\\\"\\n      }\\n    ]\\n  }\\n}\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"values\"\n          ],\n          \":\"\n        ],\n        [\n          \"pre\",\n          {\n            \"lang\": \"js\",\n            \"highlighted\": \"<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">\\\"username\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"username\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">\\\"password\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"password\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n          },\n          [\n            \"code\",\n            \"{\\n  \\\"username\\\": \\\"username\\\",\\n  \\\"password\\\": \\\"password\\\",\\n}\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"Form.createFormField\"\n    ],\n    [\n      \"p\",\n      \"用于标记 \",\n      [\n        \"code\",\n        \"mapPropsToFields\"\n      ],\n      \" 返回的表单域数据，\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#components-form-demo-global-state\"\n        },\n        \"例子\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      \"this.props.form.getFieldDecorator(id, options)\"\n    ],\n    [\n      \"p\",\n      \"经过 \",\n      [\n        \"code\",\n        \"getFieldDecorator\"\n      ],\n      \" 包装的控件，表单控件会自动添加 \",\n      [\n        \"code\",\n        \"value\"\n      ],\n      \"（或 \",\n      [\n        \"code\",\n        \"valuePropName\"\n      ],\n      \" 指定的其他属性） \",\n      [\n        \"code\",\n        \"onChange\"\n      ],\n      \"（或 \",\n      [\n        \"code\",\n        \"trigger\"\n      ],\n      \" 指定的其他属性），数据同步将被 Form 接管，这会导致以下结果：\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你\",\n          [\n            \"strong\",\n            \"不再需要也不应该\"\n          ],\n          \"用 \",\n          [\n            \"code\",\n            \"onChange\"\n          ],\n          \" 来做同步，但还是可以继续监听 \",\n          [\n            \"code\",\n            \"onChange\"\n          ],\n          \" 等事件。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你不能用控件的 \",\n          [\n            \"code\",\n            \"value\"\n          ],\n          \" \",\n          [\n            \"code\",\n            \"defaultValue\"\n          ],\n          \" 等属性来设置表单域的值，默认值可以用 \",\n          [\n            \"code\",\n            \"getFieldDecorator\"\n          ],\n          \" 里的 \",\n          [\n            \"code\",\n            \"initialValue\"\n          ],\n          \"。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你不应该用 \",\n          [\n            \"code\",\n            \"setState\"\n          ],\n          \"，可以使用 \",\n          [\n            \"code\",\n            \"this.props.form.setFieldsValue\"\n          ],\n          \" 来动态改变表单值。\"\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"特别注意\"\n    ],\n    [\n      \"p\",\n      \"如果使用的是 \",\n      [\n        \"code\",\n        \"react@<15.3.0\"\n      ],\n      \"，则 \",\n      [\n        \"code\",\n        \"getFieldDecorator\"\n      ],\n      \" 调用不能位于纯函数组件中: \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/facebook/react/pull/6534\"\n        },\n        \"https://github.com/facebook/react/pull/6534\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"getFieldDecorator(id, options) 参数\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"id\"\n          ],\n          [\n            \"td\",\n            \"必填输入控件唯一标志。支持嵌套式的\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/react-component/form/pull/48\"\n              },\n              \"写法\"\n            ],\n            \"。\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.getValueFromEvent\"\n          ],\n          [\n            \"td\",\n            \"可以把 onChange 的参数（如 event）转化为控件的值\"\n          ],\n          [\n            \"td\",\n            \"function(..args)\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/react-component/form#option-object\"\n              },\n              \"reference\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.initialValue\"\n          ],\n          [\n            \"td\",\n            \"子节点的初始值，类型、可选值均由子节点决定(\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/ant-design/ant-design/issues/4093\"\n              },\n              \"注意：由于内部校验时使用 \",\n              [\n                \"code\",\n                \"===\"\n              ],\n              \" 判断是否变化，建议使用变量缓存所需设置的值而非直接使用字面量\"\n            ],\n            \")\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.normalize\"\n          ],\n          [\n            \"td\",\n            \"转换默认的 value 给控件，\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://codepen.io/afc163/pen/JJVXzG?editors=001\"\n              },\n              \"一个选择全部的例子\"\n            ]\n          ],\n          [\n            \"td\",\n            \"function(value, prevValue, allValues): any\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.preserve\"\n          ],\n          [\n            \"td\",\n            \"即便字段不再使用，也保留该字段的值\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"3.12.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.rules\"\n          ],\n          [\n            \"td\",\n            \"校验规则，参考下方文档\"\n          ],\n          [\n            \"td\",\n            \"object\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.trigger\"\n          ],\n          [\n            \"td\",\n            \"收集子节点的值的时机\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"'onChange'\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.validateFirst\"\n          ],\n          [\n            \"td\",\n            \"当某一规则校验不通过时，是否停止剩下的规则的校验\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.validateTrigger\"\n          ],\n          [\n            \"td\",\n            \"校验子节点值的时机\"\n          ],\n          [\n            \"td\",\n            \"string\",\n            \"|\",\n            \"string\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"'onChange'\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"options.valuePropName\"\n          ],\n          [\n            \"td\",\n            \"子节点的值的属性，如 Switch 的是 'checked'\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"'value'\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"更多参数请查看 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/react-component/form#option-object\"\n        },\n        \"rc-form option\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      \"Form.Item\"\n    ],\n    [\n      \"p\",\n      \"注意：一个 Form.Item 建议只放一个被 getFieldDecorator 装饰过的 child，当有多个被装饰过的 child 时，\",\n      [\n        \"code\",\n        \"help\"\n      ],\n      \" \",\n      [\n        \"code\",\n        \"required\"\n      ],\n      \" \",\n      [\n        \"code\",\n        \"validateStatus\"\n      ],\n      \" 无法自动生成。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"colon\"\n          ],\n          [\n            \"td\",\n            \"配合 label 属性使用，表示是否显示 label 后面的冒号\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"extra\"\n          ],\n          [\n            \"td\",\n            \"额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。\"\n          ],\n          [\n            \"td\",\n            \"string\",\n            \"|\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"hasFeedback\"\n          ],\n          [\n            \"td\",\n            \"配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"help\"\n          ],\n          [\n            \"td\",\n            \"提示信息，如不设置，则会根据校验规则自动生成\"\n          ],\n          [\n            \"td\",\n            \"string\",\n            \"|\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"htmlFor\"\n          ],\n          [\n            \"td\",\n            \"设置子元素 label \",\n            [\n              \"code\",\n              \"htmlFor\"\n            ],\n            \" 属性\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\",\n            \"3.17.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"label\"\n          ],\n          [\n            \"td\",\n            \"label 标签的文本\"\n          ],\n          [\n            \"td\",\n            \"string\",\n            \"|\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelCol\"\n          ],\n          [\n            \"td\",\n            \"label 标签布局，同 \",\n            [\n              \"code\",\n              \"<Col>\"\n            ],\n            \" 组件，设置 \",\n            [\n              \"code\",\n              \"span\"\n            ],\n            \" \",\n            [\n              \"code\",\n              \"offset\"\n            ],\n            \" 值，如 \",\n            [\n              \"code\",\n              \"{span: 3, offset: 12}\"\n            ],\n            \" 或 \",\n            [\n              \"code\",\n              \"sm: {span: 3, offset: 12}\"\n            ],\n            \"。在 3.14.0 之后，你可以通过 Form 的 labelCol 进行统一设置。当和 Form 同时设置时，以 FormItem 为准。\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://ant.design/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelAlign\"\n          ],\n          [\n            \"td\",\n            \"标签文本对齐方式\"\n          ],\n          [\n            \"td\",\n            \"'left' \",\n            \"|\",\n            \" 'right'\"\n          ],\n          [\n            \"td\",\n            \"'right'\"\n          ],\n          [\n            \"td\",\n            \"3.15.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"required\"\n          ],\n          [\n            \"td\",\n            \"是否必填，如不设置，则会根据校验规则自动生成\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateStatus\"\n          ],\n          [\n            \"td\",\n            \"校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"wrapperCol\"\n          ],\n          [\n            \"td\",\n            \"需要为输入控件设置布局样式时，使用该属性，用法同 labelCol。在 3.14.0 之后，你可以通过 Form 的 wrapperCol 进行统一设置。当和 Form 同时设置时，以 FormItem 为准。\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://ant.design/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"校验规则\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"enum\"\n          ],\n          [\n            \"td\",\n            \"枚举类型\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"len\"\n          ],\n          [\n            \"td\",\n            \"字段长度\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"max\"\n          ],\n          [\n            \"td\",\n            \"最大长度\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"message\"\n          ],\n          [\n            \"td\",\n            \"校验文案\"\n          ],\n          [\n            \"td\",\n            \"string\",\n            \"|\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"min\"\n          ],\n          [\n            \"td\",\n            \"最小长度\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"pattern\"\n          ],\n          [\n            \"td\",\n            \"正则表达式校验\"\n          ],\n          [\n            \"td\",\n            \"RegExp\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"required\"\n          ],\n          [\n            \"td\",\n            \"是否必选\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"false\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"transform\"\n          ],\n          [\n            \"td\",\n            \"校验前转换字段值\"\n          ],\n          [\n            \"td\",\n            \"function(value) => transformedValue:any\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"type\"\n          ],\n          [\n            \"td\",\n            \"内建校验类型，\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/yiminghe/async-validator#type\"\n              },\n              \"可选项\"\n            ]\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"'string'\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validator\"\n          ],\n          [\n            \"td\",\n            \"自定义校验（注意，\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/ant-design/ant-design/issues/5155\"\n              },\n              \"callback 必须被调用\"\n            ],\n            \"）\"\n          ],\n          [\n            \"td\",\n            \"function(rule, value, callback)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"whitespace\"\n          ],\n          [\n            \"td\",\n            \"必选时，空格是否会被视为错误\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"false\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"更多高级用法可研究 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/yiminghe/async-validator\"\n        },\n        \"async-validator\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h2\",\n      \"在 TypeScript 中使用\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { Form } from <span class=\\\"token string\\\">\\\"antd\\\"</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { FormComponentProps } from <span class=\\\"token string\\\">\\\"antd/es/form\\\"</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\ninterface UserFormProps extends FormComponentProps {\\n  age<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}\\n\\nclass UserForm extends React<span class=\\\"token punctuation\\\">.</span>Component<span class=\\\"token operator\\\">&lt;</span>UserFormProps<span class=\\\"token punctuation\\\">,</span> any<span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n}\\n\\n<span class=\\\"token keyword\\\">const</span> App <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span>create<span class=\\\"token operator\\\">&lt;</span>UserFormProps<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>{\\n  <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n}<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>UserForm<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { Form } from \\\"antd\\\";\\nimport { FormComponentProps } from \\\"antd/es/form\\\";\\n\\ninterface UserFormProps extends FormComponentProps {\\n  age: number;\\n  name: string;\\n}\\n\\nclass UserForm extends React.Component<UserFormProps, any> {\\n  // ...\\n}\\n\\nconst App = Form.create<UserFormProps>({\\n  // ...\\n})(UserForm);\"\n      ]\n    ],\n    [\n      \"style\",\n      \"\\n.code-box-demo .ant-form:not(.ant-form-inline):not(.ant-form-vertical) {\\n  max-width: 600px;\\n}\\n.markdown.api-container table td:last-child {\\n  white-space: nowrap;\\n  word-wrap: break-word;\\n}\\n\"\n    ],\n    [\n      \"h2\",\n      \"FAQ\"\n    ],\n    [\n      \"h3\",\n      \"自定义 validator 没有效果\"\n    ],\n    [\n      \"p\",\n      \"这是由于你的 \",\n      [\n        \"code\",\n        \"validator\"\n      ],\n      \" 有错误导致 \",\n      [\n        \"code\",\n        \"callback\"\n      ],\n      \" 没有执行到。你可以选择通过 \",\n      [\n        \"code\",\n        \"async\"\n      ],\n      \" 返回一个 promise 或者使用 \",\n      [\n        \"code\",\n        \"try...catch\"\n      ],\n      \" 进行错误捕获：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"validator<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span>rule<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Something wrong!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// or</span>\\n\\n<span class=\\\"token function\\\">validator</span><span class=\\\"token punctuation\\\">(</span>rule<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Something wrong!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n      },\n      [\n        \"code\",\n        \"validator: async (rule, value) => {\\n  throw new Error('Something wrong!');\\n}\\n\\n// or\\n\\nvalidator(rule, value, callback) => {\\n  try {\\n    throw new Error('Something wrong!');\\n  } catch (err) {\\n    callback(err);\\n  }\\n}\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"如何在函数组件中拿到 form 实例？\"\n    ],\n    [\n      \"p\",\n      \"你需要通过 \",\n      [\n        \"code\",\n        \"forwardRef\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"useImperativeHandle\"\n      ],\n      \" 的组合使用来实现在函数组件中正确拿到 form 实例：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import React<span class=\\\"token punctuation\\\">,</span> { forwardRef<span class=\\\"token punctuation\\\">,</span> useImperativeHandle } from <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport Form<span class=\\\"token punctuation\\\">,</span> { FormComponentProps } from <span class=\\\"token string\\\">\\\"antd/lib/form/Form\\\"</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> FCForm <span class=\\\"token operator\\\">=</span> forwardRef<span class=\\\"token operator\\\">&lt;</span>FormComponentProps<span class=\\\"token punctuation\\\">,</span> FCFormProps<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token punctuation\\\">(</span>{ form<span class=\\\"token punctuation\\\">,</span> onSubmit }<span class=\\\"token punctuation\\\">,</span> ref<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    <span class=\\\"token function\\\">useImperativeHandle</span><span class=\\\"token punctuation\\\">(</span>ref<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>{\\n      form\\n    }<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    `<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>the rest of your form`<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> EnhancedFCForm <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span>create<span class=\\\"token operator\\\">&lt;</span>FCFormProps<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>FCForm<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import React, { forwardRef, useImperativeHandle } from \\\"react\\\";\\nimport Form, { FormComponentProps } from \\\"antd/lib/form/Form\\\";\\n\\nconst FCForm = forwardRef<FormComponentProps, FCFormProps>(\\n  ({ form, onSubmit }, ref) => {\\n    useImperativeHandle(ref, () => ({\\n      form\\n    }));\\n    `...the rest of your form`;\\n  }\\n);\\nconst EnhancedFCForm = Form.create<FCFormProps>()(FCForm);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"使用表单组件可以写成这样：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> TestForm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> formRef <span class=\\\"token operator\\\">=</span> createRef<span class=\\\"token operator\\\">&lt;</span>Ref<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>EnhancedFCForm\\n      onSubmit<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>formRef<span class=\\\"token punctuation\\\">.</span>current!<span class=\\\"token punctuation\\\">.</span>form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getFieldValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>}\\n      wrappedComponentRef<span class=\\\"token operator\\\">=</span>{formRef}\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const TestForm = () => {\\n  const formRef = createRef<Ref>();\\n  return (\\n    <EnhancedFCForm\\n      onSubmit={() => console.log(formRef.current!.form.getFieldValue(\\\"name\\\"))}\\n      wrappedComponentRef={formRef}\\n    />\\n  );\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"在线示例：\"\n    ],\n    [\n      \"p\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://codesandbox.io/s/wrappedcomponentref-in-function-component-fj43c?fontsize=14&hidenavigation=1&theme=dark\"\n        },\n        [\n          \"img\",\n          {\n            \"title\": null,\n            \"src\": \"https://codesandbox.io/static/img/play-codesandbox.svg\",\n            \"alt\": \"Edit wrappedComponentRef-in-function-component\"\n          }\n        ]\n      ]\n    ]\n  ]\n};"],"sourceRoot":""}